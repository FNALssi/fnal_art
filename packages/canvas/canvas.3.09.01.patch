diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4cc3c9f..4f7fb7d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,10 +13,10 @@
 # ======================================================================
 
 cmake_minimum_required(VERSION 3.12...3.14 FATAL_ERROR)
-project(canvas LANGUAGES CXX C)
+project(canvas VERSION 3.09.01 LANGUAGES CXX C)
 
 # cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
+find_package(cetmodules REQUIRED)
 
 include(CetCMakeEnv)
 cet_cmake_env()
@@ -27,62 +27,22 @@
   EXTRA_FLAGS -pedantic
   EXTRA_CXX_FLAGS -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -DBOOST_TEST_NO_OLD_TOOLS
   )
-cet_have_qual(sse2 SSE2)
-if ( SSE2 )
-  cet_add_compiler_flags(CXX -msse2 -ftree-vectorizer-verbose=2)
-endif()
-
-if($ENV{CET_SANITIZE_ADDRESS})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(ASAN_LIB libasan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if($ENV{CET_SANITIZE_THREAD})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(TSAN_LIB libtsan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if ($ENV{CET_SANITIZE_ADDRESS})
-cet_add_compiler_flags(CXX -fsanitize=address)
-cet_add_compiler_flags(C -fsanitize=address)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=address")
-endif()
-
-if ($ENV{CET_SANITIZE_THREAD})
-cet_add_compiler_flags(CXX -fsanitize=thread -D__SANITIZE_THREAD__)
-cet_add_compiler_flags(C -fsanitize=thread -D__SANITIZE_THREAD__)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-endif()
 
 cet_report_compiler_flags()
 
-find_ups_product(cppunit)
-find_ups_product(clhep)
-find_ups_product(cetlib_except)
-find_ups_product(cetlib v2_01_00)
-find_ups_product(fhiclcpp)
-find_ups_product(messagefacility)
-find_ups_product(range)
-find_ups_boost(BOOST_TARGETS)
-
-# define CLHEP
-cet_find_library(CLHEP  NAMES CLHEP   PATHS ENV CLHEP_LIB_DIR NO_DEFAULT_PATH)
-
-# define cppunit
-cet_find_library(CPPUNIT NAMES cppunit   PATHS ENV CPPUNIT_LIB   NO_DEFAULT_PATH)
+find_library(CPPUNIT NAMES cppunit REQUIRED)
+find_package(messagefacility REQUIRED)
+find_package(fhiclcpp REQUIRED)
+find_package(cetlib REQUIRED)
+find_package(cetlib_except REQUIRED)
+find_package(hep_concurrency REQUIRED)
+find_package(CLHEP REQUIRED COMPONENTS Vector Matrix)
+find_package(range-v3 REQUIRED)
+find_package(Boost COMPONENTS date_time REQUIRED)
 
 # source
 add_subdirectory(canvas)
 add_subdirectory(tools)
 
 # ups - table and config files
-add_subdirectory(ups)
-
-# packaging utility
-include(UseCPack)
+add_subdirectory(cmakeConfig)
diff --git a/canvas/CMakeLists.txt b/canvas/CMakeLists.txt
index 1b7c673..7185e70 100644
--- a/canvas/CMakeLists.txt
+++ b/canvas/CMakeLists.txt
@@ -23,7 +23,8 @@ cet_make(LIBRARY_NAME canvas
   cetlib_except
   hep_concurrency
   Boost::date_time
-  ${CLHEP}
+  CLHEP::Matrix
+  CLHEP::Vector
   ${CMAKE_DL_LIBS}
   NO_DICTIONARY)
 
diff --git a/canvas/test/Persistency/Common/CMakeLists.txt b/canvas/test/Persistency/Common/CMakeLists.txt
index 11e15ae..c8a59a9 100644
--- a/canvas/test/Persistency/Common/CMakeLists.txt
+++ b/canvas/test/Persistency/Common/CMakeLists.txt
@@ -4,7 +4,9 @@ cet_test(aggregate_t USE_BOOST_UNIT
 cet_test(aggregate_clhep_t USE_BOOST_UNIT
   LIBRARIES
   canvas
-  ${CLHEP})
+  CLHEP::Matrix
+  CLHEP::Vector
+  )
 
 cet_test(const_assns_iter_t LIBRARIES canvas)
 
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..81ca39b
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,2 @@
+# Create package configuration and version files.
+cet_cmake_config(CONFIG_FRAGMENTS canvas-fragment.cmake.in)
diff --git a/cmakeConfig/canvas-fragment.cmake.in b/cmakeConfig/canvas-fragment.cmake.in
new file mode 100644
index 0000000..babe7bf
--- /dev/null
+++ b/cmakeConfig/canvas-fragment.cmake.in
@@ -0,0 +1,7 @@
+find_package(cetlib_except REQUIRED)
+find_package(hep_concurrency REQUIRED)
+find_package(cetlib REQUIRED)
+find_package(fhiclcpp REQUIRED)
+find_package(messagefacility REQUIRED)
+find_package(range-v3 REQUIRED)
+find_package(Boost 1.50.0 REQUIRED COMPONENTS)
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 2e1137d..b8a81bb 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -6,10 +6,10 @@ macro( _canvas_install_tools )
   cmake_parse_arguments( CT "" "DIRNAME" "SCRIPT_LIST" ${ARGN})
   if( CT_DIRNAME )
     install( PROGRAMS ${CT_SCRIPT_LIST}
-             DESTINATION "${product}/${version}/tools/${CT_DIRNAME}" )
+             DESTINATION "tools/${CT_DIRNAME}" )
   else()
     install( PROGRAMS ${CT_SCRIPT_LIST}
-             DESTINATION "${product}/${version}/tools" )
+             DESTINATION "tools" )
   endif()
 endmacro( _canvas_install_tools )
 
