diff --git a/CMakeLists.txt b/CMakeLists.txt
index e0e36a5..25e1cf7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,6 +9,8 @@
 # It sets up all of the larsoft ups products (lardata, larsim, larreco, etc.)
 # ======================================================================
 
+# if the CETBUILDTOOLS_VERSION environmental variable is defined, use cetbuildtools
+if(DEFINED ENV{CETBUILDTOOLS_VERSION})
 
 # use cmake 3.14 or later
 cmake_minimum_required (VERSION 3.12...3.14 FATAL_ERROR)
@@ -52,3 +54,31 @@ add_subdirectory(ups)
 
 # packaging utility
 include(UseCPack)
+
+else() # We are using cetmodules.
+
+cmake_minimum_required (VERSION 3.11)
+
+project( larsoft VERSION 08.05.00 LANGUAGES NONE )
+
+find_package(cetmodules REQUIRED)
+
+set(fcl_dir job)
+set(gdml_dir gdml)
+
+include(CetCMakeEnv)
+cet_cmake_env()
+
+# useful scripts
+add_subdirectory(bin)
+
+# documentation
+add_subdirectory(doc)
+
+# release database
+add_subdirectory(releaseDB)
+
+# generate packageConfig
+add_subdirectory(cmakeConfig)
+
+endif()
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..c64db59
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1 @@
+cet_cmake_config( CONFIG_FRAGMENTS larsoft-fragment.cmake.in )
diff --git a/cmakeConfig/larsoft-fragment.cmake.in b/cmakeConfig/larsoft-fragment.cmake.in
new file mode 100644
index 0000000..4632468
--- /dev/null
+++ b/cmakeConfig/larsoft-fragment.cmake.in
@@ -0,0 +1,10 @@
+find_package( lareventdisplay REQUIRED )
+find_package( larexamples REQUIRED )
+find_package( larana REQUIRED )
+find_package( larreco REQUIRED )
+find_package( larg4 REQUIRED )
+find_package( larpandora REQUIRED )
+find_package( larwirecell REQUIRED )
+find_package( larsoftobj REQUIRED )
+find_package( ifdh_art REQUIRED )
+find_package( larsoft_data )
diff --git a/releaseDB/CMakeLists.txt b/releaseDB/CMakeLists.txt
index 008dd62..7998408 100644
--- a/releaseDB/CMakeLists.txt
+++ b/releaseDB/CMakeLists.txt
@@ -1,3 +1,5 @@
+# if the CETBUILDTOOLS_VERSION environmental variable is defined, use cetbuildtools
+if(DEFINED ENV{CETBUILDTOOLS_VERSION})
 # variables to be used in cmake templates
 macro( create_product_variables productname productversion )
    string(TOUPPER ${productname} PRODUCTNAME_UC )
@@ -14,6 +16,8 @@ macro( create_product_variables productname productversion )
    #message(STATUS "${PRODUCTNAME_UC} version is ${${PRODUCTNAME_UC}_VERSION}")
 endmacro( create_product_variables)
 
+create_product_variables( larsoft ${version} )
+
 # define qualifiers
 set( BASEQUAL e19 )
 set( version_set s96 )
