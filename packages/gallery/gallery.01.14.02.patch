diff --git a/CMakeLists.txt b/CMakeLists.txt
index 31e831e..a7668ef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,12 +13,10 @@
 # ======================================================================
 
 cmake_minimum_required(VERSION 3.12...3.14 FATAL_ERROR)
-project(gallery LANGUAGES CXX)
+project(gallery VERSION 1.14.01 LANGUAGES CXX)
 
 # cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
-
-list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules)
+find_package(cetmodules REQUIRED)
 
 include(CetCMakeEnv)
 cet_cmake_env()
@@ -28,51 +26,14 @@ cet_set_compiler_flags(DIAGS VIGILANT
   NO_UNDEFINED
   EXTRA_FLAGS -pedantic
   EXTRA_CXX_FLAGS -Wnon-virtual-dtor -Wdelete-non-virtual-dtor)
-cet_have_qual(sse2 SSE2)
-if (SSE2)
-  cet_add_compiler_flags(CXX -msse2 -ftree-vectorizer-verbose=2)
-endif()
-
-if($ENV{CET_SANITIZE_ADDRESS})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(ASAN_LIB libasan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if($ENV{CET_SANITIZE_THREAD})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(TSAN_LIB libtsan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if ($ENV{CET_SANITIZE_ADDRESS})
-cet_add_compiler_flags(CXX -fsanitize=address)
-cet_add_compiler_flags(C -fsanitize=address)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=address")
-endif()
-
-if ($ENV{CET_SANITIZE_THREAD})
-cet_add_compiler_flags(CXX -fsanitize=thread -D__SANITIZE_THREAD__)
-cet_add_compiler_flags(C -fsanitize=thread -D__SANITIZE_THREAD__)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-endif()
 
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product(canvas_root_io)
-find_ups_product(canvas)
-find_ups_product(messagefacility)
-find_ups_product(fhiclcpp)
-find_ups_product(cetlib v2_01_00)
-find_ups_product(cetlib_except v1_01_00)
-find_ups_product(clhep)
-find_ups_root()
-find_ups_boost(BOOST_TARGETS)
+find_package(canvas REQUIRED)
+find_package(canvas_root_io REQUIRED)
+find_package(cetlib REQUIRED)
+find_package(cetlib_except REQUIRED)
 
 # art_dictionary
 include(ArtDictionary)
@@ -81,7 +42,4 @@ include(ArtDictionary)
 add_subdirectory(gallery)
 
 # ups - table and config files
-add_subdirectory(ups)
-
-# packaging utility
-include(UseCPack)
+add_subdirectory(cmakeConfig)
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..ed7ccfc
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,2 @@
+# Create package configuration and version files.
+cet_cmake_config(CONFIG_FRAGMENTS gallery-fragment.cmake.in)
diff --git a/cmakeConfig/gallery-fragment.cmake.in b/cmakeConfig/gallery-fragment.cmake.in
new file mode 100644
index 0000000..8f335a9
--- /dev/null
+++ b/cmakeConfig/gallery-fragment.cmake.in
@@ -0,0 +1,3 @@
+find_package(cetlib REQUIRED)
+find_package(canvas REQUIRED)
+find_package(canvas_root_io REQUIRED)
