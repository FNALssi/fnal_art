commit 177cf827e27ed0542c70c9a7731c6eec28c369d7
Author: Patrick Gartung <gartung@fnal.gov>
Date:   Wed Apr 1 16:25:07 2020 -0500

    Cetmodules

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 029b9d5..b51bd4b 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,10 +16,10 @@
 #  make package (builds distribution tarfile)
 
 cmake_minimum_required(VERSION 3.12...3.14 FATAL_ERROR)
-project(messagefacility LANGUAGES CXX)
+project(messagefacility VERSION 2.06.01 LANGUAGES CXX)
 
 # cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
+find_package(cetmodules REQUIRED)
 
 include(CetCMakeEnv)
 cet_cmake_env()
@@ -31,48 +31,15 @@
   EXTRA_CXX_FLAGS -Wnon-virtual-dtor -Wdelete-non-virtual-dtor
   )
 
-if($ENV{CET_SANITIZE_ADDRESS})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(ASAN_LIB libasan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if($ENV{CET_SANITIZE_THREAD})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(TSAN_LIB libtsan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if ($ENV{CET_SANITIZE_ADDRESS})
-cet_add_compiler_flags(CXX -fsanitize=address)
-cet_add_compiler_flags(C -fsanitize=address)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=address")
-endif()
-
-if ($ENV{CET_SANITIZE_THREAD})
-cet_add_compiler_flags(CXX -fsanitize=thread -D__SANITIZE_THREAD__)
-cet_add_compiler_flags(C -fsanitize=thread -D__SANITIZE_THREAD__)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-endif()
-
 cet_report_compiler_flags()
 
-
-# these are minimum required versions, not the actual product versions
-# find_ups_product defines variables for external libraries and executables
-find_ups_product(cetlib_except v1_00_00)
-find_ups_product(cetlib v2_00_00)
-find_ups_product(fhiclcpp v2_17_00)
-find_ups_product(sqlite v3_08_05_00 )
-find_ups_product(hep_concurrency)
-find_ups_boost(BOOST_TARGETS v1_50_0)
-
-# SQLite
-cet_find_library(SQLITE3 NAMES sqlite3_ups PATHS ENV SQLITE_LIB NO_DEFAULT_PATH)
+find_package(cetlib_except REQUIRED)
+find_package(hep_concurrency REQUIRED)
+find_package(cetlib REQUIRED)
+find_package(fhiclcpp REQUIRED)
+find_package(Boost REQUIRED COMPONENTS system filesystem program_options)
+find_package(Catch2 2.3.0 REQUIRED)
+find_library(SQLITE3 NAMES sqlite3 REQUIRED)
 
 # The environment has been established, now generate the Makefiles.
 
@@ -80,8 +47,4 @@
 add_subdirectory(perllib)
 add_subdirectory(xcompile)
 add_subdirectory(tools/migration)
-add_subdirectory(ups)
-
-# This step enables building the package tarball
-# packaging utility
-include(UseCPack)
+add_subdirectory(cmakeConfig)
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..fc83687
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,2 @@
+# Create package configuration and version files.
+cet_cmake_config(CONFIG_FRAGMENTS messagefacility-fragment.cmake.in)
diff --git a/cmakeConfig/messagefacility-fragment.cmake.in b/cmakeConfig/messagefacility-fragment.cmake.in
new file mode 100644
index 0000000..124bbed
--- /dev/null
+++ b/cmakeConfig/messagefacility-fragment.cmake.in
@@ -0,0 +1,3 @@
+find_package(cetlib_except REQUIRED)
+find_package(cetlib REQUIRED)
+find_package(fhiclcpp REQUIRED)
diff --git a/messagefacility/MessageLogger/CMakeLists.txt b/messagefacility/MessageLogger/CMakeLists.txt
index eec96b5..2ee79f7 100644
--- a/messagefacility/MessageLogger/CMakeLists.txt
+++ b/messagefacility/MessageLogger/CMakeLists.txt
@@ -1,2 +1 @@
 install_headers()
-install_source()
diff --git a/messagefacility/MessageService/CMakeLists.txt b/messagefacility/MessageService/CMakeLists.txt
index eec96b5..2ee79f7 100644
--- a/messagefacility/MessageService/CMakeLists.txt
+++ b/messagefacility/MessageService/CMakeLists.txt
@@ -1,2 +1 @@
 install_headers()
-install_source()
diff --git a/messagefacility/Utilities/CMakeLists.txt b/messagefacility/Utilities/CMakeLists.txt
index 7216b90..2830ae7 100644
--- a/messagefacility/Utilities/CMakeLists.txt
+++ b/messagefacility/Utilities/CMakeLists.txt
@@ -6,10 +6,10 @@ add_custom_command(TARGET mf_catch_main POST_BUILD
   COMMAND strip -S $<TARGET_FILE:mf_catch_main>
   COMMENT "Stripping messagefacility-Catch main library"
   )
-_cet_check_lib_directory()
 cet_add_to_library_list(mf_catch_main)
-install(TARGETS mf_catch_main ARCHIVE DESTINATION ${${product}_lib_dir})
+install(TARGETS mf_catch_main
+  ARCHIVE DESTINATION ${${CMAKE_PROJECT_NAME}_lib_dir}
+  )
 
 # install files
 install_headers()
-install_source()
diff --git a/messagefacility/plugins/CMakeLists.txt b/messagefacility/plugins/CMakeLists.txt
index 7cf288f..0f3d478 100644
--- a/messagefacility/plugins/CMakeLists.txt
+++ b/messagefacility/plugins/CMakeLists.txt
@@ -19,4 +19,3 @@ basic_plugin(cerr mfStatsPlugin ${mf_plugin_libraries})
 basic_plugin(file mfStatsPlugin ${mf_plugin_libraries})
 
 install_headers()
-install_source()
diff --git a/xcompile/CMakeLists.txt b/xcompile/CMakeLists.txt
index ea1507f..799e3dc 100644
--- a/xcompile/CMakeLists.txt
+++ b/xcompile/CMakeLists.txt
@@ -1,4 +1,4 @@
 INSTALL (FILES
     LinuxPPC.cmake
-    DESTINATION ${product}/${version}/source/xcompile
+    DESTINATION source/xcompile
     )
