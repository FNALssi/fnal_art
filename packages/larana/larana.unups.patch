diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5f0d5ca..539ec96 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,16 +12,11 @@ cmake_minimum_required (VERSION 3.12...3.14 FATAL_ERROR)
 
 project(larana LANGUAGES CXX)
 
-# cetbuildtools contains our cmake modules
-SET ( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
-IF (NOT CETBUILDTOOLS_VERSION)
-    MESSAGE (FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules")
-ENDIF()
-
-set(CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules
-		      $ENV{CETBUILDTOOLS_DIR}/Modules
-		      ${CMAKE_MODULE_PATH})
+set(fcl_dir job)
+set(fw_dir config_data)
+set(gdml_dir gdml)
 
+find_package(cetmodules REQUIRED)
 include(CetCMakeEnv)
 cet_cmake_env()
 
@@ -34,23 +29,8 @@ cet_set_compiler_flags(DIAGS CAUTIOUS
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( larcore )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( larsim )
-find_ups_product( larreco )
-find_ups_product( nutools )
-find_ups_product( nug4 )
-find_ups_product( nurandom )
-find_ups_product( art )
-find_ups_product(art_root_io)
-find_ups_product( cetbuildtools )
-find_ups_product( postgresql )
-find_ups_product( eigen )
+find_package( larreco REQUIRED )
+
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -62,10 +42,10 @@ add_subdirectory(larana)
 
 # tests
 add_subdirectory(test)
-
+add_subdirectory(cmakeConfig)
 # ups - table and config files
-add_subdirectory(ups)
+#add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
+#include(UseCPack)
 
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..ab17cf6
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,4 @@
+
+# create package configuration and version files
+
+cet_cmake_config()
diff --git a/cmakeConfig/larana-fragment.cmake.in b/cmakeConfig/larana-fragment.cmake.in
new file mode 100644
index 0000000..9f34616
--- /dev/null
+++ b/cmakeConfig/larana-fragment.cmake.in
@@ -0,0 +1 @@
+find_package( larreco REQUIRED )
diff --git a/larana/CosmicRemoval/CMakeLists.txt b/larana/CosmicRemoval/CMakeLists.txt
index 6a38312..2a019eb 100644
--- a/larana/CosmicRemoval/CMakeLists.txt
+++ b/larana/CosmicRemoval/CMakeLists.txt
@@ -1,3 +1,10 @@
+# Add top level include
+include_directories ( ${PROJECT_SOURCE_DIR} )
+
+include(${Geant4_USE_FILE})
+include_directories(${Geant4_INCLUDE_DIRS})
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Geant4_CXX_FLAGS} -Wno-shadow -Wno-unused-parameter -Wno-ignored-qualifiers")
+
 add_subdirectory(TrackContainment)
 
 art_make(
diff --git a/larana/OpticalDetector/CMakeLists.txt b/larana/OpticalDetector/CMakeLists.txt
index 75b1054..04a33c2 100644
--- a/larana/OpticalDetector/CMakeLists.txt
+++ b/larana/OpticalDetector/CMakeLists.txt
@@ -7,7 +7,7 @@ art_make(
     ${ART_FRAMEWORK_SERVICES_REGISTRY}
     ${ART_ROOT_IO_TFILESERVICE_SERVICE}
     ${ART_ROOT_IO_TFILE_SUPPORT}
-    ${CLHEP}
+    ${CLHEP_LIBRARIES}
     ${FHICLCPP}
     ${MF_MESSAGELOGGER}
     ROOT::Core
@@ -32,7 +32,7 @@ art_make(
     larsim_Simulation
     nurandom_RandomUtils_NuRandomService_service
   SERVICE_LIBRARIES
-    ${CLHEP}
+    ${CLHEP_LIBRARIES}
     ${MF_MESSAGELOGGER}
     ROOT::Core
     ROOT::Hist
@@ -42,4 +42,5 @@ art_make(
 install_headers()
 install_fhicl()
 install_source()
-install_fw(LIST toyWaveform.txt SUBDIRNAME OpticalDetector)
+install_fw( LIST toyWaveform.txt
+  SUBDIRNAME OpticalDetector )
diff --git a/larana/ParticleIdentification/CMakeLists.txt b/larana/ParticleIdentification/CMakeLists.txt
index bc6e721..a878aa0 100644
--- a/larana/ParticleIdentification/CMakeLists.txt
+++ b/larana/ParticleIdentification/CMakeLists.txt
@@ -1,3 +1,4 @@
+include_directories ( ${PROJECT_SOURCE_DIR} )
 art_make(
   LIB_LIBRARIES
     ${ART_FRAMEWORK_PRINCIPAL}
