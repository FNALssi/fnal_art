commit f266f29d43a459f283927128aed61a2b55de545a
Author: Patrick Gartung <gartung@fnal.gov>
Date:   Sat Apr 4 20:29:40 2020 -0500

    Cetmodules

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fd742a3..9b40ef6 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,21 +13,16 @@
 # ======================================================================
 
 
-# use cmake 3.14 or later
-cmake_minimum_required (VERSION 3.12...3.14 FATAL_ERROR)
+# use cmake 3.11 or later
+cmake_minimum_required (VERSION 3.11)
 
-project(larana LANGUAGES CXX)
+project(larana VERSION 08.10.03 LANGUAGES CXX)
 
-# cetbuildtools contains our cmake modules
-SET ( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
-IF (NOT CETBUILDTOOLS_VERSION)
-    MESSAGE (FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules")
-ENDIF()
-
-set(CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules
-		      $ENV{CETBUILDTOOLS_DIR}/Modules
-		      ${CMAKE_MODULE_PATH})
+set(fcl_dir job)
+set(fw_dir config_data)
+set(gdml_dir gdml)
 
+find_package(cetmodules REQUIRED)
 include(CetCMakeEnv)
 cet_cmake_env()
 
@@ -40,23 +35,8 @@ cet_set_compiler_flags(DIAGS CAUTIOUS
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( larcore )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( larsim )
-find_ups_product( larreco )
-find_ups_product( nutools )
-find_ups_product( nug4 )
-find_ups_product( nurandom )
-find_ups_product( art )
-find_ups_product(art_root_io)
-find_ups_product( cetbuildtools )
-find_ups_product( postgresql )
-find_ups_product( eigen )
+find_package( larreco REQUIRED )
+
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -68,10 +48,10 @@ add_subdirectory(larana)
 
 # tests
 add_subdirectory(test)
-
+add_subdirectory(cmakeConfig)
 # ups - table and config files
-add_subdirectory(ups)
+#add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
+#include(UseCPack)
 
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..ab17cf6
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,4 @@
+
+# create package configuration and version files
+
+cet_cmake_config()
diff --git a/cmakeConfig/larana-fragment.cmake.in b/cmakeConfig/larana-fragment.cmake.in
new file mode 100644
index 0000000..9f34616
--- /dev/null
+++ b/cmakeConfig/larana-fragment.cmake.in
@@ -0,0 +1 @@
+find_package( larreco REQUIRED )
diff --git a/larana/OpticalDetector/CMakeLists.txt b/larana/OpticalDetector/CMakeLists.txt
index 67825fe..28875e7 100644
--- a/larana/OpticalDetector/CMakeLists.txt
+++ b/larana/OpticalDetector/CMakeLists.txt
@@ -7,14 +7,14 @@ art_make(
     ${ART_FRAMEWORK_SERVICES_REGISTRY}
     ${ART_ROOT_IO_TFILESERVICE_SERVICE}
     ${ART_ROOT_IO_TFILE_SUPPORT}
-    ${CLHEP}
+    ${CLHEP_LIBRARIES}
     ${FHICLCPP}
     ${MF_MESSAGELOGGER}
     ROOT::Core
     ROOT::Hist
     ROOT::Physics
     ROOT::RIO
     ROOT::Tree
     canvas
     cetlib_except
     larana_OpticalDetector_OpDigiProperties_service
@@ -32,14 +32,13 @@ art_make(
     larsim_Simulation
     nurandom_RandomUtils_NuRandomService_service
   SERVICE_LIBRARIES
-    ${CLHEP}
+    ${CLHEP_LIBRARIES}
     ${MF_MESSAGELOGGER}
     ROOT::Core
     ROOT::Hist
     larcorealg_Geometry
   )
 
 install_headers()
 install_fhicl()
-install_source()
 install_fw(LIST toyWaveform.txt SUBDIRNAME OpticalDetector)
diff --git a/larana/ParticleIdentification/CMakeLists.txt b/larana/ParticleIdentification/CMakeLists.txt
index 812a1da..3a26d5d 100644
--- a/larana/ParticleIdentification/CMakeLists.txt
+++ b/larana/ParticleIdentification/CMakeLists.txt
@@ -8,13 +8,14 @@ art_make(
     art_Utilities
     ${FHICLCPP}
     ${MF_MESSAGELOGGER}
+    ${CLHEP_LIBRARIES}
     ROOT::Core
     ROOT::Hist
     ROOT::MathCore
     ROOT::Physics
     ROOT::RIO
     ROOT::TMVA
     ROOT::Tree
     canvas
     cetlib
     cetlib_except
@@ -28,6 +29,5 @@ art_make(
 
 install_headers()
 install_fhicl()
-install_source()
 
 add_subdirectory(scripts)
