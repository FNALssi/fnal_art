diff --git a/CMakeLists.txt b/CMakeLists.txt
index 43f23b9..3434a9e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,62 +12,46 @@
 #  make install
 #  make package (builds distribution tarfile)
 # ======================================================================
+cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
-cmake_minimum_required(VERSION 3.18.2 FATAL_ERROR)
 
-project(nutools VERSION 3.11.05 LANGUAGES CXX)
-
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
+find_package(cetmodules 2.29.06 REQUIRED)
+project(nutools VERSION 3.12.00 LANGUAGES CXX)
 
 include(CetCMakeEnv)
 cet_cmake_env()
 
+# Find our own CMake modules, and tell everyone else where to find them.
+cet_cmake_module_directories(Modules)
+
 # -D_GLIBCXX_USE_NANOSLEEP is needed to make std::this_thread::sleep_for available. (IFDatabase)
 cet_set_compiler_flags(DIAGS CAUTIOUS WERROR
                        NO_UNDEFINED
-                       EXTRA_FLAGS -pedantic
-                       EXTRA_CXX_FLAGS -D_GLIBCXX_USE_NANOSLEEP
-                                       -Wno-unused-local-typedefs -Wno-variadic-macros)
-cet_report_compiler_flags()
-
-# these are minimum required versions, not the actual product versions
-find_ups_product( art )
-find_ups_product( art_root_io )
-find_ups_product( canvas_root_io )
-find_ups_product( nusimdata )
-find_ups_product( clhep )
-find_ups_product( cetlib )
-find_ups_product( cetlib_except )
-find_ups_root()
-
-message(STATUS "ROOTSYS is ${ROOTSYS}")
+                       EXTRA_FLAGS -pedantic 
+                                   $<$<COMPILE_LANGUAGE:CXX>:-D_GLIBCXX_USE_NANOSLEEP 
+                                   -Wno-unused-local-typedefs -Wno-variadic-macros>)
+cet_report_compiler_flags(REPORT_THRESHOLD VERBOSE)
+
+find_package(art REQUIRED)
+find_package(art_root_io REQUIRED)
+find_package(canvas_root_io REQUIRED)
+find_package(nusimdata REQUIRED)
+find_package(cetlib REQUIRED)
+find_package(cetlib_except REQUIRED)
+find_package(CLHEP REQUIRED)
 
-## find_library directives
-# other dependencies
-cet_find_library( CRY NAMES CRY PATHS ENV CRY_LIB NO_DEFAULT_PATH )
-
-# macros
 include(ArtMake)
 include(BuildPlugins)
 include(CetRootCint)
 
-# include search path
-include_directories ( $ENV{CRYHOME}/src )
-
-# included for Mac OSX using XQuartz for X11
-if(APPLE)
-  include_directories ( /opt/X11/include )
-endif()
-
 # source
 add_subdirectory (nutools)
 add_subdirectory (tools)
 add_subdirectory (bundle)
+add_subdirectory (Modules)
 
 # ups - table and config files
-add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
 
+cet_cmake_config()
diff --git a/Modules/CMakeLists.txt b/Modules/CMakeLists.txt
new file mode 100644
index 0000000..736f2bd
--- /dev/null
+++ b/Modules/CMakeLists.txt
@@ -0,0 +1,2 @@
+install(DIRECTORY ./ DESTINATION Modules
+  FILES_MATCHING PATTERN "*.cmake" PATTERN "[.#]*.cmake" EXCLUDE)
diff --git a/Modules/FindCRY.cmake b/Modules/FindCRY.cmake
new file mode 100644
index 0000000..e5cad53
--- /dev/null
+++ b/Modules/FindCRY.cmake
@@ -0,0 +1,56 @@
+#[================================================================[.rst:
+FindCRY
+----------
+
+Finds CRY library and headers
+
+Imported Targets
+^^^^^^^^^^^^^^^^
+
+This module provides the following imported targets, if found:
+
+``CRY::CRY``
+  The CRY library
+
+
+#]================================================================]
+# headers
+find_file(_cet_CRYSetup_h NAMES CRYSetup.h HINTS ENV CRYHOME 
+  PATH_SUFFIXES src)
+if (_cet_CRYSetup_h)
+  get_filename_component(_cet_CRY_include_dir "${_cet_CRYSetup_h}" PATH)
+  if (_cet_CRY_include_dir STREQUAL "/")
+    unset(_cet_CRY_include_dir)
+  endif()
+endif()
+if (EXISTS "${_cet_CRY_include_dir}")
+  set(CRY_FOUND TRUE)
+  get_filename_component(_cet_CRY_dir "${_cet_CRY_include_dir}" PATH)
+  if (_cet_CRY_dir STREQUAL "/")
+    unset(_cet_CRY_dir)
+  endif()
+  set(CRY_INCLUDE_DIRS "${_cet_CRY_include_dir}")
+  set(CRY_LIBRARY_DIR "${_cet_CRY_dir}/lib}")
+endif()
+if (CRY_FOUND)
+  find_library(CRY_LIBRARY NAMES CRY PATHS ${CRY_LIBRARY_DIR})
+  if (NOT TARGET CRY::CRY)
+    add_library(CRY::CRY SHARED IMPORTED)
+    set_target_properties(CRY::CRY PROPERTIES
+      INTERFACE_INCLUDE_DIRECTORIES "${CRY_INCLUDE_DIRS}"
+      IMPORTED_LOCATION "${CRY_LIBRARY}"
+      )
+  endif()
+endif()
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(CRY
+  REQUIRED_VARS CRY_FOUND
+  CRY_INCLUDE_DIRS
+  CRY_LIBRARY)
+
+unset(_cet_CRY_FIND_REQUIRED)
+unset(_cet_CRY_dir)
+unset(_cet_CRY_include_dir)
+unset(_cet_CRYSetup_h CACHE)
+
diff --git a/bundle/CMakeLists.txt b/bundle/CMakeLists.txt
index cca778a..eec2979 100644
--- a/bundle/CMakeLists.txt
+++ b/bundle/CMakeLists.txt
@@ -29,36 +29,15 @@ create_version_variables(python v3_9_2)
 create_version_variables(python3 NAME python v3_9_2)
 create_pyqual_variables()
 
-# CMake and cetbuildtools are special: define as many versions as
-# necessary.
+# CMake and cetmodules are special: define as many versions as necessary.
 create_version_variables(cmake LIST v3_17_3 v3_18_2 v3_19_6 v3_20_0)
-create_version_variables(cetbuildtools
-  LIST
-  v8_11_01
-  v8_11_02
-  v8_12_00
-  v8_13_02 v8_13_03
-  v8_14_00 v8_14_01 v8_14_02
-  v8_15_00 v8_15_01
-  v8_16_00
-  v8_17_03
-  v8_18_00 v8_18_01 v8_18_03 v8_18_04 v8_18_05
-  )
-
 # cetmodules v1_04_00 is required by TRACE >= v3_14_00.
 create_version_variables(cetmodules1 v1_04_00)
 create_version_variables(cetmodules 
                          LIST
-                           v2_21_01 v2_21_02 v2_22_00 
-                           v2_23_02 v2_23_03
-                           v2_24_00 v2_24_01 v2_24_02
-                           v2_25_01 v2_25_05
-                           v2_26_00
-                           v2_27_00
-                           v2_28_03
-                           v2_29_00 v2_29_01 v2_29_02 v2_29_04 v2_29_05 v2_29_06)
+                           v2_29_00 v2_29_01 v2_29_02 v2_29_04 v2_29_05 v2_29_06 v2_29_07 v2_29_08 v2_29_09)
 # mrb
-create_version_variables(mrb v5_12_02)
+create_version_variables(mrb v5_19_04)
 
 # art_suite
 set(suite_rc_level)
@@ -99,7 +78,7 @@ create_version_variables(g4pii v1_3)
 create_version_variables(g4radiative v5_4)
 create_version_variables(g4surface v2_1_1)
 create_version_variables(g4tendl v1_3_2)
-create_version_variables(geant4reweight v01_08_04)
+create_version_variables(geant4reweight v01_10_00)
 
 # ifdh
 create_version_variables(libwda v2_29_1)
@@ -107,7 +86,7 @@ create_version_variables(ifdhc v2_5_16)
 create_version_variables(ifdhc_config v2_5_16)
 create_version_variables(ifbeam v2_5_2)
 create_version_variables(nucondb v2_5_2)
-create_version_variables(ifdh_art v2_12_05)
+create_version_variables(ifdh_art v2_13_00)
 # IFDH distribution.
 create_version_variables(ifdh ${IFDH_ART_VERSION})
 
@@ -120,7 +99,7 @@ create_version_variables(log4cpp v1_1_3c)
 create_version_variables(dk2nudata v01_10_00d)
 create_version_variables(dk2nugenie v01_10_00d)
 create_version_variables(protobuf v3_12_3a)
-create_version_variables(pygccxml v2_1_0a)
+create_version_variables(pygccxml v2_1_0c)
 create_version_variables(tensorflow v2_3_1a)
 create_version_variables(tensorflow_dist NAME tensorflow ${TENSORFLOW_VERSION}_a)
 
@@ -152,13 +131,13 @@ create_version_variables(cstxsd v4_0_0j)
 create_version_variables(cstxsd_dist NAME cstxsd ${CSTXSD_VERSION})
 
 # nutools
-create_version_variables(nusimdata v1_24_05)
-create_version_variables(nuevdb v1_05_05)
-create_version_variables(nug4 v1_10_00)
-create_version_variables(nugen v1_14_05)
-create_version_variables(nurandom v1_07_06)
+create_version_variables(nusimdata v1_25_00)
+create_version_variables(nuevdb v1_06_00)
+create_version_variables(nug4 v1_12_00)
+create_version_variables(nugen v1_15_00)
+create_version_variables(nurandom v1_08_00)
 
-create_version_variables(nutools v3_11_05)
+create_version_variables(nutools v3_12_00)
 create_version_variables(nutools_dist NAME nutools ${NUTOOLS_VERSION})
 set(nulite_suffix ) # Reset when no longer needed
 create_version_variables(nulite ${NUTOOLS_VERSION}${nulite_suffix})
@@ -167,7 +146,7 @@ create_version_variables(nulite_base ${NULITE_VERSION})
 create_version_variables(nubase ${NULITE_VERSION})
 create_version_variables(nu ${NULITE_VERSION})
 
-create_version_variables(ppfx v02_14_05)
+create_version_variables(ppfx v02_14_06)
 
 # NOvA
 create_version_variables(castxml v0_4_2)
diff --git a/bundle/ifdh-cfg.in b/bundle/ifdh-cfg.in
index 977a5c1..2b9f8e5 100644
--- a/bundle/ifdh-cfg.in
+++ b/bundle/ifdh-cfg.in
@@ -19,13 +19,12 @@ build_noarch ifdhc_config @IFDHC_CONFIG_VERSION@
 do_build ifbeam @IFBEAM_VERSION@ ${basequal}:${pyqual}
 do_build nucondb @NUCONDB_VERSION@ ${basequal}:${pyqual}
 
-# using a newer cetbuildtools
+# ensure cetmodules
 for _cps_cetmodules_ver in @CETMODULES_VERSION_LIST@; do
   ensure_support_package -f NULL -- cetmodules ${_cps_cetmodules_ver}
 done
-ensure_cetbuildtools @CETBUILDTOOLS_VERSION_LIST@
 
-build_cet -p "ifdh-art/ifdh_art.git" ifdh_art @IFDH_ART_VERSION@ ${basequal}${pylabel}
+build_cet -G art-framework-suite -p ifdh-art ifdh_art @IFDH_ART_VERSION@ ${basequal}${pylabel}
 
 # Local Variables:
 # mode: sh
diff --git a/nutools/EventGeneratorBase/CRY/CMakeLists.txt b/nutools/EventGeneratorBase/CRY/CMakeLists.txt
index 021ae89..23b1861 100644
--- a/nutools/EventGeneratorBase/CRY/CMakeLists.txt
+++ b/nutools/EventGeneratorBase/CRY/CMakeLists.txt
@@ -1,16 +1,23 @@
 
-art_make( LIB_LIBRARIES nusimdata::SimulationBase
-                        CRY
+find_package(ROOT COMPONENTS Geom GeomPainter Core EG REQUIRED)
+find_package(CRY)
+
+cet_make_library(SOURCE CRYHelper.cxx
+                 HEADERS_TARGET
+                 LIBRARIES PRIVATE
+                        CRY::CRY
+                        nusimdata::SimulationBase
+                        art::Framework_Services_Registry
                         messagefacility::MF_MessageLogger
-                        
                         fhiclcpp::fhiclcpp
                         cetlib::cetlib
 			cetlib_except::cetlib_except
                         ROOT::Geom
                         ROOT::GeomPainter
 			ROOT::EG
-                        ${ROOT_BASIC_LIB_LIST} )
-
+                        ROOT::Core
+                        CLHEP::CLHEP
+                        )
 
 install_headers()
 install_fhicl()
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 8ae01eb..336e448 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -3,19 +3,13 @@ macro( _nu_install_tools )
   cmake_parse_arguments( NT "" "DIRNAME" "SCRIPT_LIST" ${ARGN})
   if( NT_DIRNAME )
     install( PROGRAMS ${NT_SCRIPT_LIST}
-             DESTINATION "${product}/${version}/tools/${NT_DIRNAME}" )
+             DESTINATION "tools/${NT_DIRNAME}" )
   else()
     install( PROGRAMS ${NT_SCRIPT_LIST}
-             DESTINATION "${product}/${version}/tools" )
+             DESTINATION "tools" )
   endif()
 endmacro( _nu_install_tools )
 
 add_subdirectory (refactor)
 add_subdirectory (nutools3)
 
-# This is for users NOT using mrb or cetbuildtools in their build system
-CONFIGURE_FILE ( ${CMAKE_CURRENT_SOURCE_DIR}/setup_cetbuildtools.csh.in
-                 ${CMAKE_CURRENT_BINARY_DIR}/setup_cetbuildtools.csh @ONLY )
-CONFIGURE_FILE ( ${CMAKE_CURRENT_SOURCE_DIR}/setup_cetbuildtools.sh.in
-                 ${CMAKE_CURRENT_BINARY_DIR}/setup_cetbuildtools.sh @ONLY )
-install_scripts( LIST ${CMAKE_CURRENT_BINARY_DIR}/setup_cetbuildtools.csh ${CMAKE_CURRENT_BINARY_DIR}/setup_cetbuildtools.sh )
diff --git a/tools/cetbuildtools8/update_cmake_cetb8.pl b/tools/cetbuildtools8/update_cmake_cetb8.pl
index 9e2c0c9..6a72103 100755
--- a/tools/cetbuildtools8/update_cmake_cetb8.pl
+++ b/tools/cetbuildtools8/update_cmake_cetb8.pl
@@ -6,21 +6,26 @@ BEGIN { %dir_list = (
         "art_Persistency_Provenance" => "art::Persistency_Provenance",
         "art_Framework_Principal" => "art::Framework_Principal",
         "art_Framework_Services_Registry" => "art::Framework_Services_Registry",
+        "ART_FRAMEWORK_SERVICES_REGISTRY" => "art::Framework_Services_Registry",
         "art_Framework_Services_Optional_RandomNumberGenerator_service" => "art::Framework_Services_Optional_RandomNumberGenerator_service",
         "art_Framework_IO_ProductMix" => "art::Framework_IO_ProductMix",
         "art_Utilities" => "art::Utilities",
         "MF_MessageLogger"  => "messagefacility::MF_MessageLogger",
+        "MF_MESSAGELOGGER"  => "messagefacility::MF_MessageLogger",
+        "FHICLCPP" => "fhiclcpp::fhiclcpp",
         "canvas" => "canvas::canvas",
         "cetlib" => "cetlib::cetlib",
         "cetlib_except" => "cetlib_except::cetlib_except",
         "lardata_Utilities_LArPropertiesServiceArgoNeuT_service" => "ArgoneutUtilities_LArPropertiesServiceArgoNeuT_service",
         "lardata_Utilities_DetectorPropertiesServiceArgoNeuT_service" => "ArgoneutUtilities_DetectorPropertiesServiceArgoNeuT_service",
+        "GeometryTestLib" => "larcorealg::GeometryTestLib",
         "nusimdata_SimulationBase" => "nusimdata::SimulationBase"
                        ); }
 
 foreach my $lib (sort keys %dir_list) {
    next if m&add_subdirectory&i;
    next if m&find_ups_product&i;
+   next if m&cet_find_library&i;
    next if m&simple_plugin&i;
    next if m&create_version_variables&i;
    next if m&SUBDIRNAME&i;
@@ -41,20 +46,27 @@ s&\$\{ART_FRAMEWORK_IO_SOURCES\}&art::Framework_IO_Sources&;
 s&\$\{ART_FRAMEWORK_PRINCIPAL\}&art::Framework_Principal&;
 s&\$\{ART_FRAMEWORK_SERVICES_REGISTRY\}&art::Framework_Services_Registry&;
 s&\$\{ART_PERSISTENCY_COMMON\}&art::Persistency_Common&;
+s&\$\{ART_PERSISTENCY_PROVENANCE\}&art::Persistency_Provenance&;
+s&\$\{ART_UTILITIES\}&art::Utilities&;
 s&\$\{ART_ROOT_IO\}&art_root_io::art_root_io&;
 s&\$\{ART_ROOT_IO_ROOTINPUT_SOURCE\}&art_root_io::RootInput_source&;
 s&\$\{ART_ROOT_IO_TFILESERVICE_SERVICE\}&art_root_io::TFileService_service&;
 s&\$\{ART_ROOT_IO_TFILE_SUPPORT\}&art_root_io::tfile_support&;
 s&\$\{BOOST_DATE_TIME\}&Boost::date_time&;
 s&\$\{BOOST_FILESYSTEM\}&Boost::filesystem&;
+s&\$\{Boost_FILESYSTEM_LIBRARY\}&Boost::filesystem&;
 s&\$\{BOOST_REGEX\}&Boost::regex&;
-s&\$\{BOOST_SYSTEM\}&&; # No longer needed
+s&\$\{BOOST_SYSTEM\}&&; # No longer exists
+s&\$\{Boost_SYSTEM_LIBRARY\}&&; # No longer exists
 s&\$\{BOOST_THREAD\}&Boost::thread&;
+s&\$\{CANVAS\}&canvas::canvas&;
 s&\$\{CETLIB\}&cetlib::cetlib&;
 s&\$\{CETLIB_EXCEPT\}&cetlib_except::cetlib_except&;
 s&\$\{FHICLCPP\}&fhiclcpp::fhiclcpp&;
 s&\$\{MF_MESSAGELOGGER\}&messagefacility::MF_MessageLogger&;
 s&\$\{MF_UTILITIES\}&&; # No longer exists
+s&\$\{PANDORASDK\}&PANDORASDK&;
+s&\$\{PANDORAMONITORING\}&PANDORAMONITORING&;
 s&\$\{ROOT_CINT\}&&; # No longer exists
 s&\$\{ROOT_CORE\}&ROOT::Core&;
 s&\$\{ROOT_EG\}&ROOT::EG&;
@@ -88,7 +100,7 @@ s&\$\{ROOTSYS\}/lib/libEGPythia6.so&ROOT::EGPythia6&;
 s&\$\{LIBWDA\}&LIBWDA&;
 s&\$\{PQ\}&PQ&;
 s&\$\{CRY\}&CRY&;
-s&\$\{CLHEP\}&CLHEP&;
+s&\$\{CLHEP\}&CLHEP::CLHEP&;
 s&\$\{GSL\}&GSL&;
 s&\$\{XML2\}&XML2&;
 s&\$\{IFDH\}&IFDH&;
@@ -96,6 +108,8 @@ s&\$\{IFDH_SERVICE\}&IFDH_SERVICE&;
 s&\$\{LOG4CPP\}&LOG4CPP&;
 s&\$\{PYTHIA6\}&PYTHIA6&;
 s&\$\{LHAPDF\}&LHAPDF&;
+s&\$\{SQLITE\}&SQLITE&;
+s&\$\{SQLITE3\}&SQLITE&;
 s&\$\{G4FR\}&G4FR&;
 s&\$\{G4GMOCREN\}&G4GMOCREN&;
 s&\$\{G4RAYTRACER\}&G4RAYTRACER&;
@@ -104,7 +118,9 @@ s&\$\{G4VRML\}&G4VRML&;
 s&\$\{G4EVENT\}&G4EVENT&;
 s&\$\{G4GEOMETRY\}&G4GEOMETRY&;
 s&\$\{G4GLOBAL\}&G4GLOBAL&;
+s&\$\{G4GRAPHICS_REPS\}&G4GRAPHICS_REPS&;
 s&\$\{G4INTERCOMS\}&G4INTERCOMS&;
+s&\$\{G4INTERFACES\}&G4INTERFACES&;
 s&\$\{G4MATERIALS\}&G4MATERIALS&;
 s&\$\{G4MODELING\}&G4MODELING&;
 s&\$\{G4PARTICLES\}&G4PARTICLES&;
@@ -113,9 +129,11 @@ s&\$\{G4PHYSICSLISTS\}&G4PHYSICSLISTS&;
 s&\$\{G4PROCESSES\}&G4PROCESSES&;
 s&\$\{G4READOUT\}&G4READOUT&;
 s&\$\{G4RUN\}&G4RUN&;
+s&\$\{G4TRACK\}&G4TRACK&;
 s&\$\{G4TRACKING\}&G4TRACKING&;
 s&\$\{G4VISHEPREP\}&G4VISHEPREP&;
 s&\$\{G4VIS_MANAGEMENT\}&G4VIS_MANAGEMENT&;
+s&\$\{G4DIGITS_HITS\}&G4DIGITS_HITS&;
 s&\$\{XERCESC\}&XERCESC&;
 s&\$\{GFWMSG\}&GFWMSG&;
 s&\$\{GFWREG\}&GFWREG&;
@@ -169,3 +187,10 @@ s&\$\{GRWCLC\}&GRWCLC&;
 s&\$\{BLAS\}&BLAS&;
 s&\$\{DK2NU_TREE\}&DK2NU_TREE&;
 s&\$\{DK2NU_GENIE\}&DK2NU_GENIE&;
+s&\$\{TENSORFLOW\}&TENSORFLOW&;
+s&\$\{PROTOBUF\}&PROTOBUF&;
+s&\$\{GRPC_CLIENT\}&TRITON::grpcclient&;
+s&\$\{MARLEY\}&MARLEY&;
+s&\$\{MARLEY_ROOT\}&MARLEY_ROOT&;
+s&\$\{BXDECAY0\}&BXDECAY0&;
+s&\$\{JSONCPP\}&JSONCPP&;
diff --git a/tools/cetbuildtools8/update_cmake_g4.pl b/tools/cetbuildtools8/update_cmake_g4.pl
new file mode 100755
index 0000000..0e3a64d
--- /dev/null
+++ b/tools/cetbuildtools8/update_cmake_g4.pl
@@ -0,0 +1,66 @@
+use strict;
+
+use vars qw(%dir_list);
+BEGIN { %dir_list = (
+  "G4EVENT" => "Geant4::G4event",
+  "G4GEOMETRY" => "Geant4::G4geometry",
+  "G4GLOBAL" => "Geant4::G4global",
+  "G4INTERCOMS" => "Geant4::G4intercoms",
+  "G4MATERIALS" => "Geant4::G4materials",
+  "G4MODELING" => "Geant4::G4modeling",
+  "G4PARTICLES" => "Geant4::G4particles",
+  "G4PERSISTENCY" => "Geant4::G4persistency",
+  "G4PHYSICSLISTS" => "Geant4::G4physicslists",
+  "G4PROCESSES" => "Geant4::G4processes",
+  "G4READOUT" => "Geant4::G4readout",
+  "G4RUN" => "Geant4::G4run",
+  "G4TRACKING" => "Geant4::G4tracking",
+  "G4FR" => "Geant4::G4FR",
+  "G4GMOCREN" => "Geant4::G4GMocren",
+  "G4RAYTRACER" => "Geant4::G4RayTracer",
+  "G4TREE" => "Geant4::G4Tree",
+  "G4VRML" => "Geant4::G4VRML",
+  "G4VISHEPREP" => "Geant4::G4visHepRep",
+  "G4VIS_MANAGEMENT" => "Geant4::G4vis_management",
+  "XERCESC" => "XercesC::XercesC"
+                       ); }
+
+foreach my $lib (sort keys %dir_list) {
+   next if m&add_subdirectory&i;
+   next if m&find_ups_product&i;
+   next if m&simple_plugin&i;
+   next if m&create_version_variables&i;
+   next if m&SUBDIRNAME&i;
+   next if m&SUBDIRS&i;
+   next if m&LIBRARY_NAME&i;
+   next if m&PACKAGE&i;
+   next if m&fhiclcpp::fhiclcpp&i;
+   next if m&canvas::canvas&i;
+   next if m&cetlib::cetlib&i;
+   next if m&cetlib_except::cetlib_except&i;
+   next if m&messagefacility::MF&i;
+  #s&\b\Q${lib}\E([^\.\s]*\b)([^\.]|$)&$dir_list{$lib}${1}${2}&g and last;
+  s&\b\Q${lib}\E\b([^\.]|$)&$dir_list{$lib}${1}${2}&g and last;
+}
+
+s&\$\{G4FR\}&G4FR&;
+s&\$\{G4GMOCREN\}&G4GMOCREN&;
+s&\$\{G4RAYTRACER\}&G4RAYTRACER&;
+s&\$\{G4TREE\}&G4TREE&;
+s&\$\{G4VRML\}&G4VRML&;
+s&\$\{G4EVENT\}&G4EVENT&;
+s&\$\{G4GEOMETRY\}&G4GEOMETRY&;
+s&\$\{G4GLOBAL\}&G4GLOBAL&;
+s&\$\{G4INTERCOMS\}&G4INTERCOMS&;
+s&\$\{G4MATERIALS\}&G4MATERIALS&;
+s&\$\{G4MODELING\}&G4MODELING&;
+s&\$\{G4PARTICLES\}&G4PARTICLES&;
+s&\$\{G4PERSISTENCY\}&G4PERSISTENCY&;
+s&\$\{G4PHYSICSLISTS\}&G4PHYSICSLISTS&;
+s&\$\{G4PROCESSES\}&G4PROCESSES&;
+s&\$\{G4READOUT\}&G4READOUT&;
+s&\$\{G4RUN\}&G4RUN&;
+s&\$\{G4TRACKING\}&G4TRACKING&;
+s&\$\{G4VISHEPREP\}&G4VISHEPREP&;
+s&\$\{G4VIS_MANAGEMENT\}&G4VIS_MANAGEMENT&;
+s&\$\{XERCESC\}&XERCESC&;
diff --git a/tools/cetbuildtools8/update_g4.sh b/tools/cetbuildtools8/update_g4.sh
new file mode 100755
index 0000000..212b1ce
--- /dev/null
+++ b/tools/cetbuildtools8/update_g4.sh
@@ -0,0 +1,96 @@
+#!/bin/bash
+# Program name
+prog=${0##*/}
+# ======================================================================
+function usage() {
+    cat 1>&2 <<EOF
+usage: $prog [--one-file <file>] <top-dir>
+EOF
+}
+
+get_this_dir() 
+{
+    ( cd / ; /bin/pwd -P ) >/dev/null 2>&1
+    if (( $? == 0 )); then
+      pwd_P_arg="-P"
+    fi
+    reldir=`dirname ${0}`
+    thisdir=`cd ${reldir} && /bin/pwd ${pwd_P_arg}`
+}
+
+##function one_file() {
+##  local F=$1
+##  printf "$F \n"
+##  # Optionally fix whitespace
+##  (( ${fix_whitespace:-0} )) && ed "$F" < fix-whitespace.ed > /dev/null 2>&1
+##  # Fix includes 
+##  perl -wapi\~ -f ${thisdir}/fix-header-locs-nutools.pl "${F}" >/dev/null 2>&1 && rm -f "${F}~"
+##}
+
+function cmake_file() {
+  local F=$1
+  printf "$F \n"
+  # Optionally fix whitespace
+  (( ${fix_whitespace:-0} )) && ed "$F" < fix-whitespace.ed > /dev/null 2>&1
+  # Fix CMakeLists.txt 
+  perl -wapi\~ -f ${thisdir}/update_cmake_g4.pl "${F}" >/dev/null 2>&1 && rm -f "${F}~"
+}
+
+# ======================================================================
+# Prepare:
+getopt -T >/dev/null 2>&1
+if (( $? != 4 )); then
+  echo "ERROR: GNU getopt required! Check SETUP_GETOPT and PATH." 1>&2
+  exit 1
+fi
+
+TEMP=`getopt -n "$prog" -o a --long all-lumi-cases --long one-file: --long no-fix-pset -- "${@}"`
+eval set -- "$TEMP"
+while true; do
+  case $1 in
+    --fix-whitespace)
+      fix_whitespace=1
+      shift
+      ;;
+    --one-file)
+      file=$2
+      shift 2
+      ;;
+    --)
+      shift
+      break
+      ;;
+    *)
+      echo "Bad argument \"$OPT\"" 1>&2
+      usage
+      exit 1
+    esac
+done
+
+TOP=${1}
+
+get_this_dir
+
+# ======================================================================
+# Run scripts to update
+
+TMP=`mktemp -t update_sources.sh.XXXXXX`
+trap "rm $TMP* 2>/dev/null" EXIT
+
+if [[ -n "${file}" ]]; then
+  if ! [[ -r "${file}" ]]; then
+    echo "ERROR: ${file} does not exist or is not readable." 1>&2
+    exit 1
+  else
+    cmake_file "$file"
+  fi
+else
+##  for F in `find $TOP \( -name "*.c*" -o -name "*.C*" -o -name "*.icc" -o -name "*.h*" -o -name "*.H*" \) -print`; do
+##    one_file "$F"
+##  done
+##  echo
+  for F in `find $TOP -name CMakeLists.txt -print`; do
+    cmake_file "$F"
+  done
+  echo
+fi
diff --git a/ups/product_deps b/ups/product_deps
index d31aa34..a38996c 100644
--- a/ups/product_deps
+++ b/ups/product_deps
@@ -1,41 +1,335 @@
-# The parent line must be the first non-comment line in the file
-# This line defines the product name and version
-parent nutools  v3_11_05
-defaultqual     e19
-
-# These optional lines define the installed directories where
-# headers, libraries, and executables will be found
-# Use them only if your product does not conform to the defaults
-# Format: directory_type directory_path directory_name
-# The only recognized values of the first field are incdir, libdir, and bindir
-# The only recognized values of the second field are product_dir and fq_dir
-# The third field is not constrained
-# The examples here reflect the defaults
-incdir      product_dir include
-libdir      fq_dir      lib
-bindir      fq_dir      bin
-#
-product         version
-art_root_io     v1_08_03
-nusimdata       v1_24_05
-cry             v1_7n
-cetbuildtools   v8_18_05        -        only_for_build
+########################################################################
+# product_deps
+#
+#   Define attributes of a package to be built and distributed as a UPS
+#   product.
+#
+# This file is parsed as a consequence of sourcing the
+# setup_for_development or setup_deps shell-agnostic scripts.
+#
+# Generated by cetmodules 2.29.06 at Wed Oct 13 12:37:56 CDT
+########################################################################
+
+####################################
+# Basic information.
+
+##################
+# parent
+##################
+#
+# The parent line - if present - must be the first non-comment line in
+# the file, defining the product's name and version. Any information not
+# specified will be taken from the CMake project(<project-name> VERSION
+# <dot-version>) call in the CMakeLists.txt in the parent directory to
+# the one containing this file.
+#
+# Recommended:
+#
+#>  parent <product-name>
+#
+# Deprecated (will produce a warning):
+#
+#>  parent <product-name> <product-ups-version> [<chain>]...
+
+##################
+# chain[s]
+##################
+#
+# List the UPS chains ("-c", -t, "new," "current," "old...") to be defined
+# for the package. The trailing `s' is optional and without meaning.
+# Multiple chains may be specified with one or more declarations.
+#
+#>  chains <chain>...
+
+##################
+# defaultqual
+##################
+#
+# The default colon-delimited qualifier set used if one is not provided
+# to setup_for_development. Build type (debug, opt or prof) is optional.
+#
+# Deprecated - a qualifier should generally be provided to the
+# invocation of setup_for_development or setup_deps.
+#
+#>  defaultqual <qualifiers>
+
+##################
+# noarch
+##################
+#
+# Specify this keyword if the package is architecture-independent. This
+# does not necessarily imply a lack of qualifiers or of a
+# fully-qualified (fq) subdirectory in the installed package.
+#
+#>  noarch
+
+##################
+# no_fq_dir
+##################
+#
+# Specify this keyword if the UPS package should not have a
+# fully-qualified (fq) subdirectory in the installed package. This does
+# not necessarily imply noarch or a lack of qualifiers, but caution
+# should be observed if using this keyword for architecture-dependent
+# packages or those with qualifiers to avoid overwritten files when
+# multiple different variants of the package are installed in the same
+# UPS area.
+#
+#>  no_fq_dir
+
+##################
+# define_pythonpath
+##################
+#
+# If define_pythonpath is enabled, the appropriate path will be appended
+# to PYTHONPATH.
+#
+#>  define_pythonpath
+####################################
+parent		nutools
+defaultqual	e20
+####################################
+
+####################################
+# Directory specifications.
+#
+# These optional definitions specify the installed directories where
+# various files headers, libraries, and executables will be found. Some
+# have defaults; others must be specified if files of that type are to
+# be installed. Minimize configuration complexity by using only those
+# definitions necessary for the package.
+#
+##################
+# Notes:
+#
+# * Use directory specifications only if the defaults are inappropriate
+#   for your product.
+#
+# * A specification with defaults may be obviated by specifying a base
+#   of `-' as the only argument.
+#
+# * A directory will be created and appropriate UPS table file entries
+#   made *if and only if* files of that type are installed using the
+#   appropriate directive.
+#
+##################
+# Format:
+#
+#>  <spec>		<base>		[<subdir-name>]
+#
+# <base> may be `-' (negate defaults), "product_dir", or "fq_dir" as
+# desired.
+#
+# Available <spec>s and defaults:
+#
+#>  bindir		fq_dir		bin
+#
+#     Built binaries for public use.
+#
+#>  cmakemoduledir	product_dir	Modules
+#
+#     CMake modules.
+#
+#>  fcldir		product_dir	fcl
+#
+#     FHiCL framework configuration files.
+#
+#>  fwdir
+#
+#     Framework data.
+#
+#>  gdmldir		product_dir	gdml
+#
+#     GDML geometry description files.
+#
+#>  incdir		product_dir	include
+#
+#     Headers.
+#
+#>  libdir		fq_dir		lib
+#
+#     Compiled and other libraries.
+#
+#>  perllib		product_dir	perl5lib
+#
+#     Perl modules, etc.
+#
+#>  set_fwdir
+#
+#     An additional location for framework data to be added to
+#     FW_SEARCH_PATH; may be specified multiple times.
+#
+#>  set_wpdir
+#
+#     An additional location for wirecell data to be added to
+#     WIRECELL_PATH; may be specified multiple times.
+#
+#>  testdir		product_dir	test
+#
+#     Tests.
+#
+#>  wpdir
+#
+#     Wirecell data.
+#
+####################################
+bindir	fq_dir		bin
+incdir	product_dir	include
+libdir	fq_dir		lib
+####################################
+
+####################################
+# Product table.
+#
+# Table defining *all* direct UPS package dependencies.
+#
+##################
+# Format:
+#
+#>  product		version		qual	["<table_format=#>"]
+#>  <ups-product_name>	<ups-version>	[<qual-trigger>]	[<flag>]
+#>...
+#>  end_product_list
+#
+# <ups-version> may be a UPS version, a chain option (-c, -t, etc.) or a
+# chain name with a preceding `-'.
+#
+# Valid <qual-trigger> values:
+#
+# * [!]<single-qual>
+#
+#   A single qualifier whose presence in the parent's qualifier will
+#   trigger the setup of the specified version of the product. A prefix
+#   of `!' will negate the match.
+#
+# * <empty>|-
+#
+#   The specified version of the product will always be set up
+#   regardless of the parent's qualifiers. Use `-' as a placeholder if
+#   <flag> is to be specified.
+#
+# * -nq-
+#
+#   Specify explicitly that this product should be set up when the
+#   parent is unqualified.
+#
+# * -default-
+#
+#   The specified version of the product will be set up if no other
+#   product table entry for this product is applicable to the parent's
+#   qualifiers.
+#
+# Valid <flag> values:
+#
+# * only_for_build
+#
+#   The specified product will be set up for building only, and will not
+#   be added to the table file.
+#
+# * optional
+#
+#   It will not be an error if the specified product is not available to
+#   be set up.
+#
+##################
+# Notes.
+#
+# * Under older versions of the product table format ("<table_format=1>"
+#   or unspecified), -nq- had the same meaning as `-' above. When
+#   updating a product_deps file these entries should be reviewed when
+#   <table_format=2> is selected.
+#
+# * "<format>" is a valid alias for "<table_format>".
+#
+# * Under most circumstances (the parent is anything other than
+#   cetmodules), an entry for cetmodules is required.
+#
+# * It is an error for more than one non-(<qual-trigger> == "-default-")
+#   entry to match for a given product.
+#
+####################################
+product		version		qual	flags		<table_format=2>
+art_root_io	v1_08_03	-
+cry		v1_7n		-
+nusimdata	v1_25_00	-
+cetmodules	v2_29_09	-	only_for_build
 end_product_list
+####################################
 
-# -nq- here means there is no qualifier
-# a - here means the dependent product is not required by the parent and will not be setup
-qualifier     nusimdata     art_root_io   cry       notes
-c7:debug      c7:debug      c7:debug      c7:debug
-c7:prof       c7:prof       c7:prof       c7:prof
-e19:debug     e19:debug     e19:debug     e19:debug
-e19:prof      e19:prof      e19:prof      e19:prof
-e20:debug     e20:debug     e20:debug     e20:debug
-e20:prof      e20:prof      e20:prof      e20:prof
+####################################
+# Qualifier table.
+#
+# For each valid qualifer set of the parent, specify how dependencies
+# should be set up.
+#
+# Format:
+#
+#>  qualifier		<prod-spec>...	[<notes>]
+#>  <parent-qual>	<spec>...   [<text...>]
+#>...
+#>  end_qualifier_list
+#
+# <prod-spec> may be a product name or "compiler."
+#
+# <parent-qual> may be a colon-delimited qualifier set, or "-nq-" as a
+# column placeholder in the case of no parent qualifiers.
+#
+# Unless <prod-spec> is "compiler", <spec> may be a colon-delimited
+# qualifier set, or:
+#
+# * -
+#
+#   The dependency is not required for this <parent-qual> and will not
+#   be set up.
+#
+# * -nq-
+#
+#   The dependency will be set up without qualifiers.
+#
+# * -b- (deprecated)
+#
+#   A build-only dependency for this <parent-qual>. If the dependency is
+#   set up in this way, it will be set up without qualifiers. For more
+#   flexibility, use the product table to specify the only_for_build
+#   nature of the dependency and the qualifier table to specifiy how it
+#   should be set up.
+#
+# If <prod-spec> is "compiler", <spec> must be `-' (no compiler
+# required) or the name of the UPS product for the desired compiler. Any
+# qualifiers required to set up the compiler should be specified in the
+# appropriate column for that product.
+#
+##################
+# Notes.
+#
+# * A column for every product in the product table (see above) is
+#   *required* unless the only_for_build flag is specified, in which
+#   case it is optional.
+#
+####################################
+qualifier	nusimdata	art_root_io	cry		notes
+c7:debug	c7:debug	c7:debug	c7:debug
+c7:prof		c7:prof		c7:prof		c7:prof
+e20:debug	e20:debug	e20:debug	e20:debug
+e20:prof	e20:prof	e20:prof	e20:prof
 end_qualifier_list
+####################################
+
+####################################
+# Table fragment.
+#
+####################################
+####################################
+
+####################################
+# Backmatter.
+#
+# Comments and editor-specific metadata.
 
 # Preserve tabs and formatting in emacs and vi / vim:
 
 ### Local Variables:
+### mode: sh
 ### tab-width: 8
 ### End:
 
diff --git a/ups/setup_for_development b/ups/setup_for_development
index 8c5bedf..c9c5399 100644
--- a/ups/setup_for_development
+++ b/ups/setup_for_development
@@ -1,96 +1,239 @@
-# NO USER-SERVICEABLE PARTS BELOW.
+########################################################################
+# This script is shell-agnostic, which involves much acrobatics to avoid
+# causing errors in one interpreter or another (*stares in csh*).
 #
-# There should be as little as possible here,
-# with most of the heavy lifting done by other small scripts
+# There should be as little as possible here, with most of the heavy
+# lifting done by other small scripts.
 #
 # When sourcing this file from a script, you may have to tell this
-# source file where it is via the fw_db shell (or env) variable.
-# I.e.:
+# source file where it is via the fw_db shell (or env) variable, i.e.
 #    set fw_db=/some/path; source /some/path/this_file
 # or  fw_db=/some/path; . /some/path/this_file
+#
+# Generated by cetmodules 2.29.06 at Wed Oct 13 12:37:56 CDT
+########################################################################
+
+########################################################################
+# NO USER-SERVICEABLE PARTS BELOW.
+########################################################################
 
-test $?shell = 1 && set ss=csh || ss=sh
-#echo Shell type is $ss.
-
-# make some things similar. need to use set_ because sh builtin set would hide function set
-# Note: perhaps the trickiest thing in this file is the sh set_ function tries to return the same status
-#       as at the start of the function (which most likely is the result of a back-tick expression
-test "$ss" = csh && alias set_ set && alias vecho_ 'if ($?vv == 1) echo \!*' || eval 'vecho_() { test -n "${vv-}" && echo "$@"; return 0; }'
-test "$ss" =  sh && eval 'set_() { sts=$?;for xx in "$@";do var=`expr "$xx" : "\([^=]*\)"`;val=`expr "$xx" : "[^=]*=\(.*\)"`;eval "$var=\"$val\"";done;return $sts; }'
-test "$ss" =  sh && eval 'setenv() { export $1;eval "$1=\"\${2-}\""; }; source() { file=$1; shift; . $file "$@"; }; unsetenv_() { unset "$@"; }'
-test "$ss" =  sh && eval 'tnotnull() { eval "test -n \"\${$1-}\""; }'                             && eval 'nullout() { "$@" >/dev/null 2>&1; }'
-test "$ss" = csh && alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && alias nullout "\!* >& /dev/null" && alias unsetenv_ unsetenv
-test "$ss" = csh && alias return exit
-
-set_ msg1='ERROR: You MUST setup ups'
-test -z $UPS_DIR && ( echo ""; echo "$msg1"; echo "" ) && return
-
-set_ msg3='ERROR: You MUST specify either -o, -p, or -d'
-set_ msg4='Usage: setup_for_development <-d|-o|-p> <qualifier list>'
-test -z "$1" && ( echo ""; echo "$msg4"; echo "$msg3"; echo "" ) && return
-
-# make sure we know where this script lives
-# now if we were passed a path or if not, we can figure it out (maybe if we are interactive)
-#   bash, zsh, ksh and tcsh pass params to a source file, csh does not. but someone will be writing csh scripts
-set_ msg2='Please set shell or env. variable fw_db (to be the path to the framework source code). Fix this and other errors may go away.'
-tnotnull fw_db && set_ db=`sh -c "cd $fw_db >/dev/null 2>&1 && pwd"` && vecho_ 'setting db from fw_db variable' || set_ db=
-
-test -z "$db" && tnotnull BASH_SOURCE && set_ me=`dirname $BASH_SOURCE` && set_ db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via BASH_SOURCE'
-
-# history is applicable only for interactive t/csh
-test -z "$db" -a "$ss" = csh && test $?history = 0 && set history=5  # make sure history 1 works
-test -z "$db" -a "$ss" = csh && set me=`history 1|sed 's/^[ 	0-9:]*//'` && test -n "$me" && set me=`dirname $me[2]` \
-    && set db=`sh -c "cd $me >/dev/null 2>&1 && pwd"` && vecho_ 'setting db via interactive history'
-#echo This script lives in $db
-
-test -z "$db" && echo "$msg2" || vecho_ "db=$db"
-test -n "$db" && setenv CETPKG_SOURCE `dirname $db`
-
-# make sure we know the current directory
-setenv CETPKG_BUILD `pwd`
-#echo Build directory is $CETPKG_BUILD
-
-echo The working build directory is $CETPKG_BUILD
-echo The source code directory is $CETPKG_SOURCE
-
-set_ msg5='ERROR: setup of required products has failed'
-
-echo ----------- check this block for errors -----------------------
-set_ setup_fail="false"
-set_ exit_now="false"
-set_ cetb=` grep -e '^[ \t]*cetbuildtools' $CETPKG_SOURCE/ups/product_deps | grep  only_for_build| awk '{ print $1 }' `
-set_ cetv=` grep -e '^[ \t]*cetbuildtools' $CETPKG_SOURCE/ups/product_deps | grep  only_for_build| awk '{ print $2 }' `
-#echo Found $cetb $cetv
-setup -B $cetb $cetv
-test "$?" = 0 || set_ setup_fail="true"
-# now get the rest of the products
-set_ cmd="$CETBUILDTOOLS_DIR/bin/set_dev_products $CETPKG_SOURCE $CETPKG_BUILD $*"
-#echo Ready to run $cmd
-source `$cmd`
-test "$?" = 0 || set_ setup_fail="true"
-#echo "$cmd returned $setup_fail"
-test "$setup_fail" = "true" && echo "$msg5"
-test "$setup_fail" = "true" && set_ exit_now="true"
-test -e "$CETPKG_BUILD/diag_report" && cat $CETPKG_BUILD/diag_report
-echo ----------------------------------------------------------------
-
-test "${exit_now}" = "true" && test "$ss" = csh && unalias tnotnull nullout set_ vecho_ return
-test "${exit_now}" = "true" && unset ss db me thisdir msg1 msg2 msg3 msg4 msg5 setup_fail set_ setenv unsetenv_ tnotnull nullout vecho_
-test "${exit_now}" = "true" && return 1
-
-# add lib to LD_LIBRARY_PATH
-source $CETBUILDTOOLS_DIR/bin/set_dev_lib
-# add bin to path
-source $CETBUILDTOOLS_DIR/bin/set_dev_bin
-# set FHICL_FILE_PATH
-source $CETBUILDTOOLS_DIR/bin/set_dev_fhicl
-# set FW_SEARCH_PATH
-source $CETBUILDTOOLS_DIR/bin/set_dev_fwsearch
-
-# final sanity check and report
-source $CETBUILDTOOLS_DIR/bin/set_dev_check_report
-
-# cleanup before exiting
-test "$ss" = csh && unalias tnotnull nullout set_ vecho_ return
-unset ss db me thisdir msg1 msg2 msg3 msg4 msg5 setup_fail
-unset set_ setenv unsetenv_ tnotnull nullout vecho_
+# Determine shell flavor.
+true && test $?shell = 1 && set _cetpkg_shell_flavor=csh || _cetpkg_shell_flavor=sh
+
+####################################
+# A common set of commands to use to hide as many shell flavor
+# differences as possible.
+
+##################
+# IMPORTANT NOTE:
+#
+# Following extensive tests in multiple shells, I have reached the
+# conclusion that it is not actually possible for a function to mirror
+# the semantics of an assignment with respect to the status code of ``
+# and compound statements joined with "||" or "&&". To handle this, we
+# write a large chunk of shell code to a temporary file in the current
+# directory a.k.a. CETPKG_BUILD with shell variable assignments correct
+# according to the shell flavor, and then source it. This also allows us
+# to deal with the fact that some shells don't pass arguments to sourced
+# scripts *stares harder in csh*.
+#
+# 2020-06-24 CHG.
+##################
+
+# If we're C-flavored, set up the commands using alias.
+test "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_nobuild="" && \
+  set _cetpkg_shell_var_set=set\\1 && \
+  alias vecho_ 'if ($?vv == 1) echo \>\> \!*' && \
+  alias unsetenv_ unsetenv && \
+  alias tnotnull "eval '"'test $?'"\!* -eq 1' && eval '"'test -n "$'"\!*"'"'"'" && \
+  alias nullout "\!* >& /dev/null" && \
+  alias __TOP_EOF__ '' && \
+  alias return exit
+
+# For Bourne-flavored shells, use functions.
+test "$_cetpkg_shell_flavor" = sh && \
+  _cetpkg_nobuild="" && \
+  _cetpkg_shell_var_set= && \
+  eval 'vecho_() { test -n "${vv-}" && echo ">> $*"; return 0; }' && \
+  eval 'setenv() { eval "$1=\"\${2-}\"; export $1"; }' && \
+  eval 'unsetenv_() { unset "$@"; }' && \
+  eval 'source() { . "$@"; }' && \
+  eval 'tnotnull() { eval "test -n \"\${$1-}\""; }' && \
+  eval 'nullout() { "$@" >/dev/null 2>&1; }'
+####################################
+
+##################
+# Check for UPS (uses alias for return in C-flavored shells).
+test -z "$UPS_DIR" && \
+  ( echo ""; echo "ERROR: you MUST set up UPS"; echo "" ) && \
+  return 1 || true
+##################
+
+####################################
+# Need to find ourselves to set CETPKG_SOURCE.
+
+# Define empty variables for C-flavor shells to make things easier.
+test "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_fw_db= _cetpkg_myself= _cetpkg_mydir=
+
+# If user has set fw_db, identify our top-level source directory now.
+test "$_cetpkg_shell_flavor" = csh && tnotnull fw_db && \
+  set _cetpkg_fw_db=`sh -c "cd $fw_db:q >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ "found ourselves through fw_db" || true
+test "$_cetpkg_shell_flavor" = sh && tnotnull fw_db && \
+  _cetpkg_fw_db=`sh -c "cd \"$fw_db\" >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ "found ourselves through fw_db" || true
+
+##################
+# For Bash and zsh, identify ourselves now so we don't have to go
+# through acrobatics later in the sourced script.
+test "$_cetpkg_shell_flavor" = sh && tnotnull BASH_SOURCE && \
+  _cetpkg_myself="$BASH_SOURCE" && test -n "$BASH_SOURCE" && \
+  vecho_ "found ourselves through BASH_SOURCE" || true
+test "$_cetpkg_shell_flavor" = sh -a -z "$_cetpkg_myself" && \
+  tnotnull ZSH_VERSION && eval '_cetpkg_myself="${(%):-%x}"' && \
+  test -n "$_cetpkg_myself" && \
+  vecho_ "found ourselves through ZSH prompt logic" || true
+test "$_cetpkg_shell_flavor" = sh && tnotnull _cetpkg_myself && \
+  _cetpkg_mydir=`dirname "$_cetpkg_myself"` && \
+  _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir >/dev/null 2>&1 && /bin/pwd -P"` || true
+##################
+
+##################
+# History is applicable only for interactive t/csh.
+test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh -a $?history = 0 && \
+  set history=5  || true
+test -z "$_cetpkg_fw_db" -a "$_cetpkg_shell_flavor" = csh && \
+  set _cetpkg_mydir=`history 1|sed -Ee 's/^[[:space:][:digit:]:]*.*\bsource[[:space:]]+//'` && \
+  test -n "$_cetpkg_mydir" && set _cetpkg_mydir=`dirname $_cetpkg_mydir[1]:q` && \
+  set _cetpkg_fw_db=`sh -c "cd $_cetpkg_mydir:q >/dev/null 2>&1 && /bin/pwd -P"` && \
+  vecho_ 'setting db via interactive history' || true
+##################
+
+# Set CETPKG_SOURCE.
+test -n "$_cetpkg_fw_db" && \
+  vecho_ "_cetpkg_fw_db=$_cetpkg_fw_db" && \
+  setenv CETPKG_SOURCE `dirname $_cetpkg_fw_db` || \
+  printf "WARNING: please set shell or env. variable fw_db (to be the path to the\n\
+         framework source code). Fix this and other errors may go away.\n"
+####################################
+
+##################
+# Set CETPKG_BUILD.
+setenv CETPKG_BUILD `/bin/pwd -P`
+##################
+
+########################################################################
+# Write the rest of ourselves to a file and source it to handle status
+# code semantics for variable assignments.
+#
+# Note that even here we have to play a trick or two due to the fact
+# that we have to deal with the difference in the way sh- and csh-flavor
+# shells handle a quoted delimiter word for a HERE document: the latter
+# expect the delimiter to include the quoting; the former do not. This
+# is the reason for the C-flavored __TOP_EOF__ alias, and the explicit
+# return at the end of the sourced script.
+#
+########################################################################
+
+sed -Ee 's&\b__SET__([[:space:]]+)&'$_cetpkg_shell_var_set'&g' \
+  -e 's&__SETUP_ARGS__&'"$*"'&g' \
+  > ./setup_common.$_cetpkg_shell_flavor <<\__TOP_EOF__
+########################################################################
+
+####################################
+# Personality check: are we setup_deps or setup_for_development?
+#
+# If we're sourcing setup.in directly (e.g. for cetmodules itself) then
+# we select "setup_for_development" behavior, otherwise _cetpkg_nobuild
+# will be set appropriately by CMake's CONFIGURE() command for
+# setup_for_development or setup_deps.
+
+test -z "$_cetpkg_nobuild" -o "$_cetpkg_nobuild" = "--nobuild" || \
+  __SET__ _cetpkg_nobuild="" || true
+####################################
+
+####################################
+# Initial info.
+
+printf "\n";
+test -z "$_cetpkg_nobuild" && \
+  echo "The working build directory is $CETPKG_BUILD" || true
+cat <<EOF
+The source code directory is $CETPKG_SOURCE
+
+---------------------- check this block for errors ---------------------
+EOF
+
+__SET__ _cetpkg_status=""
+####################################
+
+####################################
+# Attempt to find a suitable cetmodules to set up.
+
+__SET__ _cetpkg_cetmsetup=`sed -nE 's&^[[:space:]]*(cetmodules)[[:space:]]+([^[:space:]]+).*\bonly_for_build\b.*$&\1 \2&p' "$CETPKG_SOURCE/ups/product_deps"`
+test -z "_cetpkg_cetmsetup" -a ! -x "$CETPKG_SOURCE/libexec/set_dev_products" && \
+  __SET__ _cetpkg_status=1 && \
+  echo "ERROR: unable to find suitable cetmodules >= 2.00.00" || true
+test -n "$_cetpkg_status" -o -z "$_cetpkg_cetmsetup" || setup -B $_cetpkg_cetmsetup
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: setup of $_cetpkg_cetmsetup has failed" || true
+test -z "$_cetpkg_status$_cetpkg_cetmsetup" && setenv PATH `dropit -sfe "$CETPKG_SOURCE/bin"` && __SET__ _cetpkg_cettop="$CETPKG_SOURCE" || true
+test -z "$_cetpkg_status$_cetpkg_cettop" -a -n "$CETMODULES_DIR" && __SET__ _cetpkg_cettop="$CETMODULES_DIR"
+####################################
+
+####################################
+# Generate the setup script to set up dependencies.
+
+test -n "$_cetpkg_status" || \
+  __SET__ _cetpkg_setup="`${_cetpkg_cettop}/libexec/set_dev_products $_cetpkg_nobuild __SETUP_ARGS__`"
+test $? != 0 -o -z "$_cetpkg_setup" && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: generation of setup script has failed" || true
+####################################
+
+####################################
+# Source the setup script to set up dependencies.
+
+test -n "$_cetpkg_status" || source "$_cetpkg_setup"
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: setup of required products has failed" || true
+__SET__ _cetpkg_setup_errlog="$CETPKG_BUILD/cetpkg_setup.err"
+test -s "$_cetpkg_setup_errlog" && cat "$_cetpkg_setup_errlog" || \
+  rm -f "$_cetpkg_setup_errlog"
+####################################
+
+cat <<EOF
+------------------------------------------------------------------------
+
+EOF
+
+# Final sanity check and report.
+test -n "$_cetpkg_status" -o -n "$_cetpkg_nobuild" || \
+  "$_cetpkg_cettop/libexec/verify_build_environment" "$CETPKG_BUILD"
+test $? != 0 && __SET__ _cetpkg_status=1 && \
+  echo "ERROR: unable to verify build environment" || true
+
+####################################
+# Clean up before exiting.
+
+# Clean up C-flavor aliases and prepare to return^H^H^H^H^H^Hexit.
+test "$_cetpkg_shell_flavor" = csh && \
+  unalias vecho_ unsetenv_ tnotnull nullout __TOP_EOF__ return && \
+  set return=exit || return=return
+
+# Finish cleanup and exit. Note the use of eval so we can unset
+# everything including $return and $_cetpkg_status.
+eval "unset vecho_ setenv unsetenv_ source tnotnull nullout "\
+"_cetpkg_nobuild _cetpkg_shell_var_set "\
+"_cetpkg_fw_db _cetpkg_myself _cetpkg_mydir _cetpkg_cetmsetup "\
+"_cetpkg_cettop _cetpkg_setup _cetpkg_setup_errlog "\
+"_cetpkg_shell_flavor return _cetpkg_status; \
+$return $_cetpkg_status"
+####################################
+
+########################################################################
+\__TOP_EOF__
+__TOP_EOF__
+
+source ./setup_common.$_cetpkg_shell_flavor
