commit 19c5887107cfeef21ffc9322a6f57aab2fb79ad4
Author: Patrick Gartung <gartung@fnal.gov>
Date:   Wed Apr 1 23:19:26 2020 -0500

    Cetmodules

diff --git a/.spack_patched b/.spack_patched
new file mode 100755
index 0000000..e69de29
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5e27f83..9a42565 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,11 +1,11 @@
-cmake_minimum_required(VERSION 3.7)
+# use cmake 3.12 or later
+cmake_minimum_required (VERSION 3.12)
 
-project(larg4)
-
-find_package(cetbuildtools REQUIRED)
-
-list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules $ENV{ART_DIR}/Modules)
+project(larg4 VERSION 08.12.01 LANGUAGES CXX)
 
+find_package( cetmodules )
+set(fcl_dir job)
+set(gdml_dir gdml)
 include(CetCMakeEnv)
 cet_cmake_env()
 
@@ -19,41 +19,30 @@ cet_set_compiler_flags(DIAGS CAUTIOUS WERROR NO_UNDEFINED EXTRA_FLAGS -pedantic)
 
 cet_report_compiler_flags()
 
-find_ups_product(art)
-find_ups_product(art_root_io)
-find_ups_product(artg4tk)
-find_ups_product(canvas)
-find_ups_product(canvas_root_io)
-find_ups_product(cetlib)
-find_ups_product(clhep)
-find_ups_product(fhiclcpp)
-find_ups_geant4()
-find_ups_product(larcore)
-find_ups_product(larcoreobj)
-find_ups_product(lardataalg)
-find_ups_product(lardataobj)
-find_ups_product(messagefacility)
-find_ups_product(nusimdata)
-find_ups_product(nug4)
-
+find_package(nug4 REQUIRED)
+find_package(artg4tk REQUIRED)
+find_package(larevt REQUIRED)
+find_package(Geant4 REQUIRED)
+find_package(ROOT REQUIRED)
+include(${Geant4_USE_FILE})
+# macros for dictionary and simple_plugin
 include(ArtDictionary)
 include(ArtMake)
 include(BuildPlugins)
 
-# artg4tk
-cet_find_library( ARTG4TK_ACTIONBASE NAMES artg4tk_actionBase PATHS ENV ARTG4TK_LIB NO_DEFAULT_PATH )
-cet_find_library( ARTG4TK_GEANTINIT NAMES artg4tk_geantInit PATHS ENV ARTG4TK_LIB NO_DEFAULT_PATH )
-cet_find_library( ARTG4TK_PLUGINDETECTORS_GDML NAMES artg4tk_pluginDetectors_gdml PATHS ENV ARTG4TK_LIB NO_DEFAULT_PATH )
-cet_find_library(ARTG4TK_DATAPRODUCTS_G4DETECTORHITS NAMES artg4tk_DataProducts_G4DetectorHits PATHS ENV ARTG4TK_LIB NO_DEFAULT_PATH)
-cet_find_library(ARTG4TK_SERVICES_ACTIONHOLDER_SERVICE NAMES artg4tk_services_ActionHolder_service PATHS ENV ARTG4TK_LIB NO_DEFAULT_PATH)
-cet_find_library(ARTG4TK_SERVICES_PHYSICSLISTHOLDER_SERVICE NAMES artg4tk_services_PhysicsListHolder_service PATHS ENV ARTG4TK_LIB NO_DEFAULT_PATH)
-cet_find_library(ARTG4TK_SERVICES_DETECTORHOLDER_SERVICE NAMES artg4tk_services_DetectorHolder_service PATHS ENV ARTG4TK_LIB NO_DEFAULT_PATH)
+# artgktk
+cet_find_library( ARTG4TK_ACTIONBASE NAMES artg4tk_actionBase )
+cet_find_library( ARTG4TK_GEANTINIT NAMES artg4tk_geantInit )
+cet_find_library( ARTG4TK_PLUGINDETECTORS_GDML NAMES artg4tk_pluginDetectors_gdml )
+cet_find_library(ARTG4TK_DATAPRODUCTS_G4DETECTORHITS NAMES artg4tk_DataProducts_G4DetectorHits )
+cet_find_library(ARTG4TK_SERVICES_ACTIONHOLDER_SERVICE NAMES artg4tk_services_ActionHolder_service )
+cet_find_library(ARTG4TK_SERVICES_PHYSICSLISTHOLDER_SERVICE NAMES artg4tk_services_PhysicsListHolder_service )
+cet_find_library(ARTG4TK_SERVICES_DETECTORHOLDER_SERVICE NAMES artg4tk_services_DetectorHolder_service )
 
 add_subdirectory(fcl)
 add_subdirectory(gdml)
 add_subdirectory(larg4)
-add_subdirectory(ups)
-
+#add_subdirectory(ups)
+add_subdirectory(cmakeConfig)
 # packaging utility
-# this has to be last
-include(UseCPack)
+#include(UseCPack)
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..ed28e86
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1 @@
+cet_cmake_config(CONFIG_FRAGMENTS larg4-fragment.cmake.in)
diff --git a/cmakeConfig/larg4-fragment.cmake.in b/cmakeConfig/larg4-fragment.cmake.in
new file mode 100644
index 0000000..fcf7279
--- /dev/null
+++ b/cmakeConfig/larg4-fragment.cmake.in
@@ -0,0 +1,3 @@
+find_package(artg4tk REQUIRED)
+find_package(larevt REQUIRED)
+include(${Geant4_USE_FILE})
diff --git a/larg4/Analysis/CMakeLists.txt b/larg4/Analysis/CMakeLists.txt
index 2238c0e..677cc0c 100644
--- a/larg4/Analysis/CMakeLists.txt
+++ b/larg4/Analysis/CMakeLists.txt
@@ -1,20 +1,20 @@
+set(CMAKE_CXX_FLAGS "${Geant4_CXX_FLAGS} -Wno-shadow -Wno-unused-parameter")
 art_make(
   MODULE_LIBRARIES
     art_Framework_Core
     art_Framework_Principal
-    art_root_io_tfile_support ${ROOT_CORE}
+    art_root_io_tfile_support
     art_root_io_TFileService_service
     art_Framework_Services_Registry
     art_Persistency_Provenance
     art_Utilities
-    ${Boost_FILESYSTEM_LIBRARY}
-    ${Boost_SYSTEM_LIBRARY}
+    Boost::filesystem
+    Boost::system
     canvas
     cetlib_except
     fhiclcpp
-    ${G4ZLIB}
     nusimdata_SimulationBase
-    ${ROOT_CORE}
-    ${ROOT_HIST}
-    ${ROOT_TREE}
+    ROOT::Core
+    ROOT::Hist
+    ROOT::Tree
 )
diff --git a/larg4/Core/CMakeLists.txt b/larg4/Core/CMakeLists.txt
index 3c9274e..f0c9f85 100644
--- a/larg4/Core/CMakeLists.txt
+++ b/larg4/Core/CMakeLists.txt
@@ -1,3 +1,4 @@
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Geant4_CXX_FLAGS} -Wno-shadow -Wno-unused-parameter")
 art_make(
   MODULE_LIBRARIES
     art_Framework_Core
@@ -9,22 +10,18 @@ art_make(
     artg4tk_services_PhysicsListHolder_service
     art_Persistency_Provenance
     art_Utilities
-    ${Boost_FILESYSTEM_LIBRARY}
-    ${Boost_SYSTEM_LIBRARY}
+    Boost::filesystem
+    Boost::system
     canvas
     cetlib
     cetlib_except
-    clhep
+    ${CLHEP_LIBRARIES}
+    ${Geant4_LIBRARIES}
     fhiclcpp
-    ${G4EVENT}
-    ${G4INTERCOMS}
-    ${G4INTERFACES}
-    ${G4RUN}
-    ${G4TRACKING}
     larg4_pluginActions_ParticleListAction_service
     MF_MessageLogger
-    ${ROOT_CORE}
-    ${ROOT_PHYSICS}
+    ROOT::Core
+    ROOT::Physics
 )
 
 install_headers()
diff --git a/larg4/Services/CMakeLists.txt b/larg4/Services/CMakeLists.txt
index 7f7ea9b..eb2e904 100644
--- a/larg4/Services/CMakeLists.txt
+++ b/larg4/Services/CMakeLists.txt
@@ -1,3 +1,4 @@
+set(CMAKE_CXX_FLAGS "${Geant4_CXX_FLAGS} -Wno-shadow -Wno-unused-parameter")
 simple_plugin(
   LArG4Detector service
   SOURCE
@@ -12,23 +13,22 @@ simple_plugin(
     artg4tk_pluginDetectors_gdml
     artg4tk_services_DetectorHolder_service
     art_Persistency_Provenance
-    ${Boost_FILESYSTEM_LIBRARY}
-    ${Boost_SYSTEM_LIBRARY}
+    Boost::filesystem
+    Boost::system
     canvas
     cetlib
     cetlib_except
-    clhep
+    ${CLHEP_LIBRARIES}
     fhiclcpp
-    ${G4DIGITS_HITS}
-    ${G4EVENT}
-    ${G4GEOMETRY}
-    ${G4GLOBAL}
-    ${G4MATERIALS}
-    ${G4PERSISTENCY}
+    G4digits_hits
+    G4event
+    G4geometry
+    G4global
+    G4materials
+    G4persistency
     larcorealg_Geometry
     MF_MessageLogger
-    ${ROOT_CORE}
-    ${XERCESC}
+    ROOT::Core
 )
 
 install_headers()
diff --git a/larg4/pluginActions/CMakeLists.txt b/larg4/pluginActions/CMakeLists.txt
index 759cafb..0a4a899 100644
--- a/larg4/pluginActions/CMakeLists.txt
+++ b/larg4/pluginActions/CMakeLists.txt
@@ -1,3 +1,4 @@
+set(CMAKE_CXX_FLAGS "${Geant4_CXX_FLAGS} -Wno-shadow -Wno-unused-parameter")
 simple_plugin(
   MCTruthEventAction service
 NOP
@@ -6,19 +7,19 @@ NOP
   artg4tk_actionBase
   artg4tk_services_ActionHolder_service
   art_Persistency_Provenance
-  ${Boost_FILESYSTEM_LIBRARY}
-  ${Boost_SYSTEM_LIBRARY}
+  Boost::filesystem
+  Boost::system
   canvas
   cetlib_except
-  clhep
+  ${CLHEP_LIBRARIES}
   fhiclcpp
-  ${G4GLOBAL}
-  ${G4PARTICLES}
+  G4global
+  G4particles
   MF_MessageLogger
   nusimdata_SimulationBase
   nug4_G4Base
-  ${ROOT_CORE}
-  ${ROOT_PHYSICS}
+  ROOT::Core
+  ROOT::Physics
 SOURCE
   MCTruthEventAction_service.cc
 )
@@ -30,21 +31,21 @@ NOP
   canvas
   fhiclcpp
   cetlib_except
-  ${Boost_FILESYSTEM_LIBRARY}
-  ${Boost_SYSTEM_LIBRARY}
+  Boost::filesystem
+  Boost::system
   art_Framework_Core
   art_Framework_Principal
   artg4tk_actionBase
   artg4tk_services_ActionHolder_service
   art_Persistency_Provenance
-  clhep
-  ${G4PARTICLES}
+  ${CLHEP_LIBRARIES}
+  G4particles
   MF_MessageLogger
   nusimdata_SimulationBase
   nug4_G4Base
   nug4_ParticleNavigation
-  ${ROOT_CORE}
-  ${ROOT_PHYSICS}
+  ROOT::Core
+  ROOT::Physics
 SOURCE
   ParticleListAction_service.cxx
 )
