diff --git a/CMakeLists.txt b/CMakeLists.txt
index a0f2267..f63b477 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,105 +13,82 @@
 # ======================================================================
 
 
-# use cmake 2.8 or later
-cmake_minimum_required (VERSION 2.8)
+# use cmake 3.11 or later
+cmake_minimum_required (VERSION 3.11)
 
-project(larsim)
-
-# cetbuildtools contains our cmake modules
-SET ( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
-IF (NOT CETBUILDTOOLS_VERSION)
-    MESSAGE (FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules")
-ENDIF()
-
-set(CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules
-		      $ENV{CETBUILDTOOLS_DIR}/Modules
-		      ${CMAKE_MODULE_PATH})
+project(larsim VERSION 8.03.03 LANGUAGES CXX)
 
+set(fcl_dir job)
+set(gdml_dir gdml)
+set(fw_dir fw)
+find_package( cetmodules )
 include(CetCMakeEnv)
 cet_cmake_env()
+include(ParseVersion)
 
 # -Wno-unused-variable needed because of CLHEP
 cet_set_compiler_flags(DIAGS CAUTIOUS
   WERROR
   NO_UNDEFINED
-  ALLOW_DEPRECATIONS
   EXTRA_FLAGS -pedantic -Wno-unused-local-typedefs -Wno-unused-variable
 )
+add_definitions(-DGENIE_PRE_R3)
 
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( larcore )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( marley )
-find_ups_product( nutools )
-find_ups_product( nusimdata )
-find_ups_product( art )
-find_ups_product( cetbuildtools )
-find_ups_geant4( geant4 )
-find_ups_product( postgresql )
-find_ups_product( ifdhc )
-
-# Wes put this here to use TRACE for debugging...
-#find_ups_product( TRACE )
+find_package( larevt REQUIRED )
+find_package( marley )
+find_package( larsoft-data )
 
-#  Find all the libraries needed by our dependent CMakeList.txt files
-cet_find_library( BOOST_SERIALIZATION NAMES boost_serialization PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
-cet_find_library( BOOST_DATE_TIME     NAMES boost_date_time     PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
-#
-find_library( CRY NAMES CRY PATHS $ENV{CRYHOME}/lib NO_DEFAULT_PATH )
+find_library( CRY NAMES CRY )
+find_library( SQLITE3 NAMES sqlite3 )
 # genie
-cet_find_library( GALGORITHM NAMES GAlgorithm PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GBARYONRESONANCE NAMES GBaryonResonance PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GBASE NAMES GBase PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GBODEKYANG NAMES GBodekYang PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GCHARM NAMES GCharm PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GCOH NAMES GCoh PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GDFRC NAMES GDfrc PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GDIS NAMES GDIS PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GCROSSSECTIONS NAMES GCrossSections PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GDECAY NAMES GDecay PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GELAS NAMES GElas PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GELFF NAMES GElFF PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GHEP NAMES GHEP PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GEVGCORE NAMES GEVGCore  PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GEVGMODULES NAMES GEVGModules PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GEVGDRIVERS NAMES GEVGDrivers PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GGIBUU NAMES GGiBUU PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GHADRONTRANSP NAMES GHadronTransp PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GFRAGMENTATION NAMES GFragmentation PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GINTERACTION NAMES GInteraction PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GLLEWELLYNSMITH NAMES GLlewellynSmith  PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GMEC NAMES GMEC PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GMESSENGER NAMES GMessenger PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GNUGAMMA NAMES GNuGamma PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GNUE NAMES GNuE PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GNTUPLE NAMES GNtuple PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GNUCLEAR NAMES GNuclear PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GNUMERICAL NAMES GNumerical PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GQPM NAMES GQPM PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GPDG NAMES GPDG PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GPDF NAMES GPDF PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GQEL NAMES GQEL PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GRES NAMES GRES PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GREGISTRY NAMES GRegistry PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GREINSEGHAL NAMES GReinSeghal PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GUTILS NAMES GUtils PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GGEO NAMES GGeo PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GFLUXDRIVERS NAMES GFluxDrivers PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-cet_find_library( GMUELOSS NAMES GMuELoss PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
+cet_find_library( GALGORITHM NAMES GAlgorithm )
+cet_find_library( GBARYONRESONANCE NAMES GBaryonResonance )
+cet_find_library( GBASE NAMES GBase )
+cet_find_library( GBODEKYANG NAMES GBodekYang )
+cet_find_library( GCHARM NAMES GCharm )
+cet_find_library( GCOH NAMES GCoh )
+cet_find_library( GDFRC NAMES GDfrc )
+cet_find_library( GDIS NAMES GDIS )
+cet_find_library( GCROSSSECTIONS NAMES GCrossSections )
+cet_find_library( GDECAY NAMES GDecay )
+cet_find_library( GELAS NAMES GElas )
+cet_find_library( GELFF NAMES GElFF )
+cet_find_library( GHEP NAMES GHEP )
+cet_find_library( GEVGCORE NAMES GEVGCore  )
+cet_find_library( GEVGMODULES NAMES GEVGModules )
+cet_find_library( GEVGDRIVERS NAMES GEVGDrivers )
+cet_find_library( GGIBUU NAMES GGiBUU )
+cet_find_library( GHADRONTRANSP NAMES GHadronTransp )
+cet_find_library( GFRAGMENTATION NAMES GFragmentation )
+cet_find_library( GINTERACTION NAMES GInteraction )
+cet_find_library( GLLEWELLYNSMITH NAMES GLlewellynSmith  )
+cet_find_library( GMEC NAMES GMEC )
+cet_find_library( GMESSENGER NAMES GMessenger )
+cet_find_library( GNUGAMMA NAMES GNuGamma )
+cet_find_library( GNUE NAMES GNuE )
+cet_find_library( GNTUPLE NAMES GNtuple )
+cet_find_library( GNUCLEAR NAMES GNuclear )
+cet_find_library( GNUMERICAL NAMES GNumerical )
+cet_find_library( GQPM NAMES GQPM )
+cet_find_library( GPDG NAMES GPDG )
+cet_find_library( GPDF NAMES GPDF )
+cet_find_library( GQEL NAMES GQEL )
+cet_find_library( GRES NAMES GRES )
+cet_find_library( GREGISTRY NAMES GRegistry )
+cet_find_library( GREINSEGHAL NAMES GReinSeghal )
+cet_find_library( GUTILS NAMES GUtils )
+cet_find_library( GGEO NAMES GGeo )
+cet_find_library( GFLUXDRIVERS NAMES GFluxDrivers )
+cet_find_library( GMUELOSS NAMES GMuELoss )
 # marley libraries
-cet_find_library( MARLEY NAMES MARLEY PATHS ENV MARLEY_LIB NO_DEFAULT_PATH )
-cet_find_library( MARLEY_ROOT NAMES MARLEY_ROOT PATHS ENV MARLEY_LIB NO_DEFAULT_PATH )
+cet_find_library( MARLEY NAMES MARLEY )
+cet_find_library( MARLEY_ROOT NAMES MARLEY_ROOT )
 
 # temporarily needed since this is an unexpected header path
-include_directories( $ENV{IFDHC_FQ_DIR}/inc )
+include_directories( ${IFDHC_DIR}/inc )
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -123,9 +100,9 @@ add_subdirectory(larsim)
 
 # tests
 add_subdirectory(test)
-
+cet_cmake_config()
 # ups - table and config files
-add_subdirectory(ups)
+#add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
+#include(UseCPack)
