commit a62479044d9ad155247fe75d7a2e1b7304059d40
Author: Patrick Gartung <gartung@fnal.gov>
Date:   Wed Apr 1 23:59:12 2020 -0500

    Cetmodules

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0751f5c..fce679e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,176 +13,154 @@
 # ======================================================================
 
 
-# use cmake 2.8 or later
-cmake_minimum_required (VERSION 2.8)
+# use cmake 3.12 or later
+cmake_minimum_required (VERSION 3.12)
 
-project(larsim)
-
-# cetbuildtools contains our cmake modules
-SET ( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
-IF (NOT CETBUILDTOOLS_VERSION)
-    MESSAGE (FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules")
-ENDIF()
-
-set(CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules
-		      $ENV{CETBUILDTOOLS_DIR}/Modules
-		      ${CMAKE_MODULE_PATH})
+project(larsim VERSION 8.19.03 LANGUAGES CXX)
 
+set(fcl_dir job)
+set(gdml_dir gdml)
+set(fw_dir fw)
+find_package( cetmodules )
 include(CetCMakeEnv)
 cet_cmake_env()
+include(ParseVersion)
 
 # -Wno-unused-variable needed because of CLHEP
 cet_set_compiler_flags(DIAGS CAUTIOUS
   WERROR
   NO_UNDEFINED
-  EXTRA_FLAGS -pedantic -Wno-unused-local-typedefs -Wno-unused-variable
+  EXTRA_FLAGS -pedantic -Wno-unused-local-typedefs -Wno-unused-variable -Wno-shadow -Wno-unused-parameter -Wno-implicit-fallthrough -Wno-ignored-qualifiers
 )
 
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( larcore )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( marley )
-find_ups_product( nutools )
-find_ups_product(nug4)
-find_ups_product( nugen )
-find_ups_product( nurandom )
-find_ups_product( nusimdata )
-find_ups_product( art )
-find_ups_product(art_root_io)
-find_ups_product( cetbuildtools )
-find_ups_geant4( geant4 )
-find_ups_product( postgresql )
-find_ups_product( ifdhc )
-find_ups_product( genie )
-find_ups_product( log4cpp )
-
-# Wes put this here to use TRACE for debugging...
-#find_ups_product( TRACE )
-
-#  Find all the libraries needed by our dependent CMakeList.txt files
-cet_find_library( BOOST_SERIALIZATION NAMES boost_serialization PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
-cet_find_library( BOOST_DATE_TIME     NAMES boost_date_time     PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
-#
-find_library( CRY NAMES CRY PATHS $ENV{CRYHOME}/lib NO_DEFAULT_PATH )
+find_package( nurandom REQUIRED )
+find_package( larevt REQUIRED )
+find_package( Geant4 REQUIRED )
+include(${Geant4_USE_FILE})
+find_package( ROOT REQUIRED )
+find_package( CLHEP REQUIRED )
+find_package( marley )
+find_package( larsoft-data )
+
+find_library( CRY NAMES CRY )
+find_library( SQLITE3 NAMES sqlite3 )
 
 # genie (copied from nugen)
-  cet_find_library( LOG4CPP NAMES log4cpp PATHS ENV LOG4CPP_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWMSG       NAMES GFwMsg       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWREG       NAMES GFwReg       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWALG       NAMES GFwAlg       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWINT       NAMES GFwInt       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWGHEP      NAMES GFwGHEP      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWNUM       NAMES GFwNum       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWUTL       NAMES GFwUtl       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWPARDAT    NAMES GFwParDat    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWEG        NAMES GFwEG        PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWNTP       NAMES GFwNtp       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHXSIG      NAMES GPhXSIg      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHPDF       NAMES GPhPDF       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNUCLST    NAMES GPhNuclSt    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCMN       NAMES GPhCmn       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDCY       NAMES GPhDcy       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHHADTRANSP NAMES GPhHadTransp PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHHADNZ     NAMES GPhHadnz     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDEEX      NAMES GPhDeEx      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHAMNGXS    NAMES GPhAMNGXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHAMNGEG    NAMES GPhAMNGEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCHMXS     NAMES GPhChmXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCOHXS     NAMES GPhCohXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCOHEG     NAMES GPhCohEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDISXS     NAMES GPhDISXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDISEG     NAMES GPhDISEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDFRCXS    NAMES GPhDfrcXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDFRCEG    NAMES GPhDfrcEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHGLWRESXS  NAMES GPhGlwResXS  PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHGLWRESEG  NAMES GPhGlwResEG  PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHIBDXS     NAMES GPhIBDXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHIBDEG     NAMES GPhIBDEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHMNUCXS    NAMES GPhMNucXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHMNUCEG    NAMES GPhMNucEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHMEL       NAMES GPhMEL       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNUELXS    NAMES GPhNuElXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNUELEG    NAMES GPhNuElEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHQELXS     NAMES GPhQELXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHQELEG     NAMES GPhQELEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHRESXS     NAMES GPhResXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHRESEG     NAMES GPhResEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHSTRXS     NAMES GPhStrXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHSTREG     NAMES GPhStrEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNDCY      NAMES GPhNDcy      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GTLGEO       NAMES GTlGeo       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GTLFLX       NAMES GTlFlx       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GRWFWK       NAMES GRwFwk       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GRWIO        NAMES GRwIO        PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GRWCLC       NAMES GRwClc       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-
-  # GENIE pre-R-3 used GSL via ROOT's Math libs, now makes direct call not available via that route
-  cet_find_library( GSL NAMES gsl PATHS ENV GSL_LIB NO_DEFAULT_PATH )
-
-  set (GENIE_LIB_LIST ${GFWMSG}
-                      ${GFWREG}
-                      ${GFWALG}
-                      ${GFWINT}
-                      ${GFWGHEP}
-                      ${GFWNUM}
-                      ${GSL}  # FWNUM relies on GSL
-                      ${GFWUTL}
-                      ${GFWPARDAT}
-                      ${GFWEG}
-                      ${GFWNTP}
-                      ${GPHXSIG}
-                      ${GPHPDF}
-                      ${GPHNUCLST}
-                      ${GPHCMN}
-                      ${GPHDCY}
-                      ${GPHHADTRANSP}
-                      ${GPHHADNZ}
-                      ${GPHDEEX}
-                      ${GPHAMNGXS}
-                      ${GPHAMNGEG}
-                      ${GPHCHMXS}
-                      ${GPHCOHXS}
-                      ${GPHCOHEG}
-                      ${GPHDISXS}
-                      ${GPHDISEG}
-                      ${GPHDFRCXS}
-                      ${GPHDFRCEG}
-                      ${GPHGLWRESXS}
-                      ${GPHGLWRESEG}
-                      ${GPHIBDXS}
-                      ${GPHIBDEG}
-                      ${GPHMNUCXS}
-                      ${GPHMNUCEG}
-                      ${GPHMEL}
-                      ${GPHNUELXS}
-                      ${GPHNUELEG}
-                      ${GPHQELXS}
-                      ${GPHQELEG}
-                      ${GPHRESXS}
-                      ${GPHRESEG}
-                      ${GPHSTRXS}
-                      ${GPHSTREG}
-                      ${GPHNDCY}
-                      ${GTLGEO}
-                      ${GTLFLX}
-                      ${GRWFWK}
-                      ${GRWIO}
-                      ${GRWCLC}
-		      ${LOG4CPP}
-                      )
+cet_find_library( LOG4CPP NAMES log4cpp PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWMSG       NAMES GFwMsg       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWREG       NAMES GFwReg       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWALG       NAMES GFwAlg       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWINT       NAMES GFwInt       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWGHEP      NAMES GFwGHEP      PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWNUM       NAMES GFwNum       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWUTL       NAMES GFwUtl       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWPARDAT    NAMES GFwParDat    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWEG        NAMES GFwEG        PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GFWNTP       NAMES GFwNtp       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHXSIG      NAMES GPhXSIg      PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHPDF       NAMES GPhPDF       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHNUCLST    NAMES GPhNuclSt    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHCMN       NAMES GPhCmn       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHDCY       NAMES GPhDcy       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHHADTRANSP NAMES GPhHadTransp PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHHADNZ     NAMES GPhHadnz     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHDEEX      NAMES GPhDeEx      PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHAMNGXS    NAMES GPhAMNGXS    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHAMNGEG    NAMES GPhAMNGEG    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHCHMXS     NAMES GPhChmXS     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHCOHXS     NAMES GPhCohXS     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHCOHEG     NAMES GPhCohEG     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHDISXS     NAMES GPhDISXS     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHDISEG     NAMES GPhDISEG     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHDFRCXS    NAMES GPhDfrcXS    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHDFRCEG    NAMES GPhDfrcEG    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHGLWRESXS  NAMES GPhGlwResXS  PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHGLWRESEG  NAMES GPhGlwResEG  PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHIBDXS     NAMES GPhIBDXS     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHIBDEG     NAMES GPhIBDEG     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHMNUCXS    NAMES GPhMNucXS    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHMNUCEG    NAMES GPhMNucEG    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHMEL       NAMES GPhMEL       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHNUELXS    NAMES GPhNuElXS    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHNUELEG    NAMES GPhNuElEG    PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHQELXS     NAMES GPhQELXS     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHQELEG     NAMES GPhQELEG     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHRESXS     NAMES GPhResXS     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHRESEG     NAMES GPhResEG     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHSTRXS     NAMES GPhStrXS     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHSTREG     NAMES GPhStrEG     PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GPHNDCY      NAMES GPhNDcy      PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GTLGEO       NAMES GTlGeo       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GTLFLX       NAMES GTlFlx       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GRWFWK       NAMES GRwFwk       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GRWIO        NAMES GRwIO        PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+cet_find_library( GRWCLC       NAMES GRwClc       PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+
+# GENIE pre-R-3 used GSL via ROOT's Math libs, now makes direct call not available via that route
+cet_find_library( GSL NAMES gsl PATHS ${CMAKE_INSTALL_RPATH} NO_DEFAULT_PATH )
+
+set (GENIE_LIB_LIST ${GFWMSG}
+                    ${GFWREG}
+                    ${GFWALG}
+                    ${GFWINT}
+                    ${GFWGHEP}
+                    ${GFWNUM}
+                    ${GSL}  # FWNUM relies on GSL
+                    ${GFWUTL}
+                    ${GFWPARDAT}
+                    ${GFWEG}
+                    ${GFWNTP}
+                    ${GPHXSIG}
+                    ${GPHPDF}
+                    ${GPHNUCLST}
+                    ${GPHCMN}
+                    ${GPHDCY}
+                    ${GPHHADTRANSP}
+                    ${GPHHADNZ}
+                    ${GPHDEEX}
+                    ${GPHAMNGXS}
+                    ${GPHAMNGEG}
+                    ${GPHCHMXS}
+                    ${GPHCOHXS}
+                    ${GPHCOHEG}
+                    ${GPHDISXS}
+                    ${GPHDISEG}
+                    ${GPHDFRCXS}
+                    ${GPHDFRCEG}
+                    ${GPHGLWRESXS}
+                    ${GPHGLWRESEG}
+                    ${GPHIBDXS}
+                    ${GPHIBDEG}
+                    ${GPHMNUCXS}
+                    ${GPHMNUCEG}
+                    ${GPHMEL}
+                    ${GPHNUELXS}
+                    ${GPHNUELEG}
+                    ${GPHQELXS}
+                    ${GPHQELEG}
+                    ${GPHRESXS}
+                    ${GPHRESEG}
+                    ${GPHSTRXS}
+                    ${GPHSTREG}
+                    ${GPHNDCY}
+                    ${GTLGEO}
+                    ${GTLFLX}
+                    ${GRWFWK}
+                    ${GRWIO}
+                    ${GRWCLC}
+                   ${LOG4CPP}
+                    )
+
+
 # marley libraries
-cet_find_library( MARLEY NAMES MARLEY PATHS ENV MARLEY_LIB NO_DEFAULT_PATH )
-cet_find_library( MARLEY_ROOT NAMES MARLEY_ROOT PATHS ENV MARLEY_LIB NO_DEFAULT_PATH )
+cet_find_library( MARLEY NAMES MARLEY)
+cet_find_library( MARLEY_ROOT NAMES MARLEY_ROOT)
 
 # temporarily needed since this is an unexpected header path
-include_directories( $ENV{IFDHC_FQ_DIR}/inc )
+include_directories( ${IFDHC_DIR}/inc )
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -194,9 +172,9 @@ add_subdirectory(larsim)
 
 # tests
 add_subdirectory(test)
-
+add_subdirectory(cmakeConfig)
 # ups - table and config files
-add_subdirectory(ups)
+#add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
+#include(UseCPack)
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..1901627
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,5 @@
+
+# create package configuration and version files
+
+cet_cmake_config(CONFIG_FRAGMENTS larsim-fragment.cmake.in)
+
diff --git a/cmakeConfig/larsim-fragment.cmake.in b/cmakeConfig/larsim-fragment.cmake.in
new file mode 100644
index 0000000..444d31f
--- /dev/null
+++ b/cmakeConfig/larsim-fragment.cmake.in
@@ -0,0 +1,7 @@
+find_package( nurandom REQUIRED )
+find_package( larevt REQUIRED )
+find_package( Geant4 REQUIRED )
+find_package( ROOT REQUIRED )
+find_package( marley )
+find_package( larsoft-data )
+
diff --git a/cmakeConfig/larsimConfig.cmake.in b/cmakeConfig/larsimConfig.cmake.in
new file mode 100644
index 0000000..9be7643
--- /dev/null
+++ b/cmakeConfig/larsimConfig.cmake.in
@@ -0,0 +1,118 @@
+@PACKAGE_INIT@
+
+if (EXISTS "@PACKAGE_inc_dir@")
+  set(larsim_inc_dir "@PACKAGE_inc_dir@")
+endif()
+if (EXISTS "@PACKAGE_lib_dir@")
+  set(larsim_lib_dir "@PACKAGE_lib_dir@")
+endif()
+if (EXISTS "@PACKAGE_bin_dir@")
+  set(larsim_bin_dir "@PACKAGE_bin_dir@")
+endif()
+if (EXISTS "@PACKAGE_modules_dir@")
+  set(larsim_modules_dir "@PACKAGE_modules_dir@")
+endif()
+if (EXISTS "@PACKAGE_test_dir@")
+  set(larsim_test_dir "@PACKAGE_test_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fw_dir@")
+  set(larsim_fw_dir "@PACKAGE_fw_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+if (EXISTS "@PACKAGE_fcl_dir@")
+  set(larsim_fcl_dir "@PACKAGE_fcl_dir@")
+endif()
+
+if (IS_DIRECTORY "${@CMAKE_PROJECT_NAME@_modules_dir}")
+  list(APPEND CMAKE_MODULE_PATH "${@CMAKE_PROJECT_NAME@_modules_dir}")
+endif()
+
+if (IS_DIRECTORY "${@CMAKE_PROJECT_NAME@_inc_dir}")
+  include_directories(${@CMAKE_PROJECT_NAME@_inc_dir})
+endif()
+
+@CONFIG_FIND_LIBRARY_COMMANDS@
+
+########################################################################
+# larsim-fragment.cmake.in
+find_package( nurandom REQUIRED )
+find_package( larevt REQUIRED )
+find_package( Geant4 REQUIRED )
+find_package( ROOT REQUIRED )
+find_package( marley )
+find_package( larsoft-data )
+
+########################################################################
+
+check_required_components(@CMAKE_PROJECT_NAME@)
diff --git a/larsim/DetSim/CMakeLists.txt b/larsim/DetSim/CMakeLists.txt
index 560ddfd..ba81a48 100644
--- a/larsim/DetSim/CMakeLists.txt
+++ b/larsim/DetSim/CMakeLists.txt
@@ -4,8 +4,8 @@ simple_plugin(SimWireAna "module"
               ${ART_ROOT_IO_TFILE_SUPPORT}
               ${ART_ROOT_IO_TFILESERVICE_SERVICE}
               ${MF_MESSAGELOGGER}
-              ${ROOT_CORE}
-              ${ROOT_HIST})
+              ROOT::Core
+              ROOT::Hist)
 
 simple_plugin(SimWire "module"
               lardataobj_RawData
@@ -16,11 +16,11 @@ simple_plugin(SimWire "module"
               ${ART_FRAMEWORK_SERVICES_REGISTRY}
               ${ART_ROOT_IO_TFILESERVICE_SERVICE}
               ${ART_ROOT_IO_TFILE_SUPPORT}
-              ${CLHEP}
+              ${CLHEP_LIBRARIES}
               ${MF_MESSAGELOGGER}
-              ${ROOT_CORE}
-              ${ROOT_HIST}
-              ${ROOT_MATHCORE})
+              ROOT::Core
+              ROOT::Hist
+              ROOT::MathCore)
 
 simple_plugin(WienerFilterAna "module"
               larcorealg_Geometry
@@ -28,9 +28,8 @@ simple_plugin(WienerFilterAna "module"
               ${ART_ROOT_IO_TFILE_SUPPORT}
               ${ART_ROOT_IO_TFILESERVICE_SERVICE}
               ${MF_MESSAGELOGGER}
-              ${ROOT_CORE}
-              ${ROOT_HIST})
+              ROOT::Core
+              ROOT::Hist)
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/ElectronDrift/CMakeLists.txt b/larsim/ElectronDrift/CMakeLists.txt
index 3769533..b6b53b9 100644
--- a/larsim/ElectronDrift/CMakeLists.txt
+++ b/larsim/ElectronDrift/CMakeLists.txt
@@ -1,26 +1,25 @@
-art_make(LIB_LIBRARIES
-           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-           larsim_IonizationScintillation
-           canvas
-           cetlib_except
-	   ${MF_MESSAGELOGGER}
-           ${FHICLCPP}
-         MODULE_LIBRARIES
-           larsim_ElectronDrift
-           larsim_Simulation
-           larsim_IonizationScintillation
-           larcorealg_Geometry
-           nurandom_RandomUtils_NuRandomService_service
-           ${ART_FRAMEWORK_SERVICES_REGISTRY}
-           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-           ${ART_ROOT_IO_TFILE_SUPPORT}
-           ${CLHEP}
-           ${MF_MESSAGELOGGER}
-           ${ROOT_CORE}
-           ${ROOT_TREE}
-         )
-
-
-install_headers()
-install_fhicl()
-install_source()
+art_make(LIB_LIBRARIES
+           ${ART_FRAMEWORK_SERVICES_REGISTRY}
+           larsim_IonizationScintillation
+           canvas
+           cetlib_except
+	   ${MF_MESSAGELOGGER}
+           ${FHICLCPP}
+         MODULE_LIBRARIES
+           larsim_ElectronDrift
+           larsim_Simulation
+           larsim_IonizationScintillation
+           larcorealg_Geometry
+           nurandom_RandomUtils_NuRandomService_service
+           ${ART_FRAMEWORK_SERVICES_REGISTRY}
+           ${ART_ROOT_IO_TFILESERVICE_SERVICE}
+           ${ART_ROOT_IO_TFILE_SUPPORT}
+           ${CLHEP_LIBRARIES}
+           ${MF_MESSAGELOGGER}
+           ROOT::Core
+           ROOT::Tree
+         )
+
+
+install_headers()
+install_fhicl()
diff --git a/larsim/EventGenerator/CMakeLists.txt b/larsim/EventGenerator/CMakeLists.txt
index e51b17e..1246f20 100644
--- a/larsim/EventGenerator/CMakeLists.txt
+++ b/larsim/EventGenerator/CMakeLists.txt
@@ -3,11 +3,11 @@ art_make(LIB_LIBRARIES
            cetlib
            cetlib_except
            ${FHICLCPP}
-           ${CLHEP}
-           ${ROOT_CORE}
-           ${ROOT_HIST}
-           ${ROOT_PHYSICS}
-           ${ROOT_RIO}
+           ${CLHEP_LIBRARIES}
+           ROOT::Core
+           ROOT::Hist
+           ROOT::Physics
+           ROOT::RIO
          MODULE_LIBRARIES
            larcorealg_Geometry
            larcoreobj_SummaryData
@@ -18,19 +18,19 @@ art_make(LIB_LIBRARIES
            ${ART_FRAMEWORK_SERVICES_REGISTRY}
            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
            ${ART_ROOT_IO_TFILE_SUPPORT}
-           ${CLHEP}
+           ${CLHEP_LIBRARIES}
            ${MF_MESSAGELOGGER}
-           ${ROOT_CORE}
-           ${ROOT_EG}
-           ${ROOT_GEOM}
-           ${ROOT_HIST}
-           ${ROOT_PHYSICS}
-           ${ROOT_RIO}
+           ROOT::Core
+           ROOT::EG
+           ROOT::Geom
+           ROOT::Hist
+           ROOT::Physics
+           ROOT::RIO
         )
 
+
 install_headers()
 install_fhicl()
-install_source()
 
 add_subdirectory(CRY)
 add_subdirectory(GENIE)
diff --git a/larsim/EventGenerator/CORSIKA/CMakeLists.txt b/larsim/EventGenerator/CORSIKA/CMakeLists.txt
index ab5991f..81cd9f8 100644
--- a/larsim/EventGenerator/CORSIKA/CMakeLists.txt
+++ b/larsim/EventGenerator/CORSIKA/CMakeLists.txt
@@ -1,18 +1,19 @@
+cet_find_simple_package( ifdh INCPATH_SUFFIXES inc INCPATH_VAR IFDHC_INC )
+include_directories(${IFDHC_INC})
 art_make(MODULE_LIBRARIES
            larcorealg_Geometry
            larcoreobj_SummaryData
            nurandom_RandomUtils_NuRandomService_service
            nusimdata_SimulationBase
            ${ART_FRAMEWORK_SERVICES_REGISTRY}
-           ${CLHEP}
+           ${CLHEP_LIBRARIES}
            ${IFDH}
            ${MF_MESSAGELOGGER}
-           ${ROOT_CORE}
-           ${ROOT_EG}
-           ${ROOT_PHYSICS}
+           ROOT::Core
+           ROOT::EG
+           ROOT::Physics
            ${SQLITE3}
          )
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventGenerator/CRY/CMakeLists.txt b/larsim/EventGenerator/CRY/CMakeLists.txt
index 92eb5ae..f728a25 100644
--- a/larsim/EventGenerator/CRY/CMakeLists.txt
+++ b/larsim/EventGenerator/CRY/CMakeLists.txt
@@ -1,4 +1,4 @@
-include_directories($ENV{CRYHOME}/src)
+include_directories(${CRYHOME}/src)
 
 art_make(MODULE_LIBRARIES
            larcorealg_Geometry
@@ -10,11 +10,10 @@ art_make(MODULE_LIBRARIES
            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
            ${ART_ROOT_IO_TFILE_SUPPORT}
            ${MF_MESSAGELOGGER}
-           ${ROOT_CORE}
-           ${ROOT_HIST}
-           ${ROOT_PHYSICS}
+           ROOT::Core
+           ROOT::Hist
+           ROOT::Physics
          )
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventGenerator/GENIE/CMakeLists.txt b/larsim/EventGenerator/GENIE/CMakeLists.txt
index d1062e9..596cbe8 100644
--- a/larsim/EventGenerator/GENIE/CMakeLists.txt
+++ b/larsim/EventGenerator/GENIE/CMakeLists.txt
@@ -1,4 +1,5 @@
-include_directories ( $ENV{GENIE_INC}/GENIE )
+
+include_directories ( ${GENIE_INC}/GENIE )
 
 art_make(MODULE_LIBRARIES
          lardataalg_MCDumpers
@@ -10,18 +11,17 @@ art_make(MODULE_LIBRARIES
          nurandom_RandomUtils_NuRandomService_service
          nugen_EventGeneratorBase_GENIE
          ${ART_FRAMEWORK_SERVICES_REGISTRY}
-         ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
+         ${ART_ROOT_IO_TFILE_SUPPORT} ROOT::Core
          ${ART_ROOT_IO_TFILESERVICE_SERVICE}
          art_Persistency_Provenance
          ${MF_MESSAGELOGGER}
-         ${CLHEP}
+         ${CLHEP_LIBRARIES}
          ${GENIE_LIB_LIST}
-         ${ROOT_EGPYTHIA6}    # FIXME!!! - resolving genie run time reference
-         ${ROOT_EG}
-         ${ROOT_HIST}
-         ${ROOT_MATHCORE}
+         ROOT::EGPythia6    # FIXME!!! - resolving genie run time reference
+         ROOT::EG
+         ROOT::Hist
+         ROOT::MathCore
         )
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventGenerator/MARLEY/CMakeLists.txt b/larsim/EventGenerator/MARLEY/CMakeLists.txt
index 67d23de..c35dc5a 100644
--- a/larsim/EventGenerator/MARLEY/CMakeLists.txt
+++ b/larsim/EventGenerator/MARLEY/CMakeLists.txt
@@ -1,5 +1,8 @@
+
 # for c2: the problem is in fhiclcpp/types/detail/Sequence.icc
-cet_add_compiler_flags( CXX -Wno-missing-braces )
+#cet_add_compiler_flags( CXX -Wno-missing-braces )
+
+include_directories ( ${MARLEY_INC} )
 
 art_make(LIB_LIBRARIES
            larcorealg_Geometry
@@ -10,9 +13,9 @@ art_make(LIB_LIBRARIES
            ${MF_MESSAGELOGGER}
            cetlib
            cetlib_except
-           ${ROOT_CORE}
-           ${ROOT_GEOM}
-           ${ROOT_PHYSICS}
+           ROOT::Core
+           ROOT::Geom
+           ROOT::Physics
            ${ART_UTILITIES}
          MODULE_LIBRARIES
            larsim_EventGenerator_MARLEY
@@ -21,11 +24,10 @@ art_make(LIB_LIBRARIES
            ${ART_FRAMEWORK_SERVICES_REGISTRY}
            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
            ${ART_ROOT_IO_TFILE_SUPPORT}
-           ${ROOT_HIST}
-           ${ROOT_TREE}
-           ${ROOT_RIO}
+           ROOT::Hist
+           ROOT::Tree
+           ROOT::RIO
          )
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventGenerator/MuonPropagation/CMakeLists.txt b/larsim/EventGenerator/MuonPropagation/CMakeLists.txt
index b1de203..371d914 100644
--- a/larsim/EventGenerator/MuonPropagation/CMakeLists.txt
+++ b/larsim/EventGenerator/MuonPropagation/CMakeLists.txt
@@ -9,15 +9,14 @@ art_make(MODULE_LIBRARIES
            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
            ${ART_ROOT_IO_TFILE_SUPPORT}
            ${MF_MESSAGELOGGER}
-           ${CLHEP}
-           ${ROOT_CORE}
-           ${ROOT_EG}
-           ${ROOT_HIST}
-           ${ROOT_PHYSICS}
-           ${ROOT_RIO}
-           ${ROOT_TREE}
+           ${CLHEP_LIBRARIES}
+           ROOT::Core
+           ROOT::EG
+           ROOT::Hist
+           ROOT::Physics
+           ROOT::RIO
+           ROOT::Tree
          )
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventWeight/App/CMakeLists.txt b/larsim/EventWeight/App/CMakeLists.txt
index d057e4b..37b9e63 100644
--- a/larsim/EventWeight/App/CMakeLists.txt
+++ b/larsim/EventWeight/App/CMakeLists.txt
@@ -7,4 +7,3 @@ art_make(LIBRARY_NAME     larsim_EventWeight
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventWeight/Base/CMakeLists.txt b/larsim/EventWeight/Base/CMakeLists.txt
index 75d557e..06ba5f5 100644
--- a/larsim/EventWeight/Base/CMakeLists.txt
+++ b/larsim/EventWeight/Base/CMakeLists.txt
@@ -1,11 +1,10 @@
 art_make(LIB_LIBRARIES
          canvas
          cetlib_except
-         ${CLHEP}
-         ${ROOT_CORE}
-         ${ROOT_MATRIX}
+         ${CLHEP_LIBRARIES}
+         ROOT::Core
+         ROOT::Matrix
          ${ART_UTILITIES})
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventWeight/Calculators/CMakeLists.txt b/larsim/EventWeight/Calculators/CMakeLists.txt
index aeaf2d2..3fcfa64 100644
--- a/larsim/EventWeight/Calculators/CMakeLists.txt
+++ b/larsim/EventWeight/Calculators/CMakeLists.txt
@@ -1,4 +1,4 @@
-include_directories($ENV{GENIE_INC}/GENIE)
+include_directories(${GENIE_INC}/GENIE)
 
 art_make(LIB_LIBRARIES
          larsim_EventWeight_Base
@@ -13,4 +13,3 @@ art_make(LIB_LIBRARIES
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/EventWeight/jobs/CMakeLists.txt b/larsim/EventWeight/jobs/CMakeLists.txt
index 64d6f50..7b62169 100644
--- a/larsim/EventWeight/jobs/CMakeLists.txt
+++ b/larsim/EventWeight/jobs/CMakeLists.txt
@@ -4,6 +4,4 @@ install_fhicl()
 
 # Also put a copy in the source tree.
 
-FILE(GLOB fcl_files *.fcl)
-install_source( EXTRAS ${fcl_files} )
 
diff --git a/larsim/GDMLUtils/CMakeLists.txt b/larsim/GDMLUtils/CMakeLists.txt
index 77136d9..c5fe86e 100644
--- a/larsim/GDMLUtils/CMakeLists.txt
+++ b/larsim/GDMLUtils/CMakeLists.txt
@@ -1,8 +1,7 @@
-include_directories($ENV{GEANT4_FQ_DIR}/include)
-include_directories($ENV{XERCES_C_INC})
+include_directories ( ${GEANT4_INCLUDE_DIRS} )
 
 art_make_exec(NAME simplifyGDML
               LIBRARIES
-              ${G4PERSISTENCY}
-	      ${G4GEOMETRY}
-              ${XERCESC})
+              ${CLHEP_LIBRARIES}
+	      ${Geant4_LIBRARIES}
+             )
diff --git a/larsim/IonizationScintillation/CMakeLists.txt b/larsim/IonizationScintillation/CMakeLists.txt
index 1c779b3..02396d6 100644
--- a/larsim/IonizationScintillation/CMakeLists.txt
+++ b/larsim/IonizationScintillation/CMakeLists.txt
@@ -4,7 +4,7 @@ art_make(LIB_LIBRARIES
            lardataalg_DetectorInfo
            larevt_SpaceCharge
            nusimdata_SimulationBase
-           ${CLHEP}
+           ${CLHEP_LIBRARIES}
            ${FHICLCPP}
            ${MF_MESSAGELOGGER}
          MODULE_LIBRARIES
@@ -15,11 +15,10 @@ art_make(LIB_LIBRARIES
            ${ART_FRAMEWORK_SERVICES_REGISTRY}
            ${ART_ROOT_IO_TFILE_SUPPORT}
            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
-           ${CLHEP}
-           ${ROOT_CORE}
-           ${ROOT_TREE}
+           ${CLHEP_LIBRARIES}
+           ROOT::Core
+           ROOT::Tree
            ${MF_MESSAGELOGGER})
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/LArG4/CMakeLists.txt b/larsim/LArG4/CMakeLists.txt
index 1f4a6d8..b250a8f 100644
--- a/larsim/LArG4/CMakeLists.txt
+++ b/larsim/LArG4/CMakeLists.txt
@@ -1,7 +1,9 @@
-include_directories($ENV{GENIE_INC}/GENIE)
-include_directories($ENV{LIBXML2_FQ_DIR}/include/libxml2)
-include_directories($ENV{GEANT4_FQ_DIR}/include)
-include_directories($ENV{XERCES_C_INC})
+include(${Geant4_USE_FILE})
+include_directories ( ${GENIE_INC}/GENIE )
+include_directories ( ${LIBXML2_INC})
+include_directories ( ${GEANT4_INCLUDE_DIRS} )
+include_directories ( ${XERCES_C_INC} )
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Geant4_CXX_FLAGS} -Wno-shadow -Wno-unused-parameter")
 
 art_make(LIB_LIBRARIES
            larsim_PhotonPropagation_PhotonVisibilityService_service
@@ -17,24 +19,24 @@ art_make(LIB_LIBRARIES
            canvas
            ${MF_MESSAGELOGGER}
            cetlib_except
-           ${ROOT_CORE}
-           ${ROOT_HIST}
-           ${ROOT_PHYSICS}
-           ${ROOT_GEOM}
-           ${ROOT_MATHCORE}
-           ${CLHEP}
-           ${G4DIGITS_HITS}
-           ${G4EVENT}
-           ${G4GEOMETRY}
-           ${G4GLOBAL}
-           ${G4GRAPHICS_REPS}
-           ${G4MATERIALS}
-           ${G4INTERCOMS}
-           ${G4PARTICLES}
-           ${G4PHYSICSLISTS}
-           ${G4PROCESSES}
-           ${G4TRACK}
-           ${G4RUN}
+           ROOT::Core
+           ROOT::Hist
+           ROOT::Physics
+           ROOT::Geom
+           ROOT::MathCore
+           ${CLHEP_LIBRARIES}
+           G4digits_hits
+           G4event
+           G4geometry
+           G4global
+           G4graphics_reps
+           G4materials
+           G4intercoms
+           G4particles
+           G4physicslists
+           G4processes
+           G4track
+           G4run
          MODULE_LIBRARIES
            larsim_LArG4
            larsim_MCCheater_ParticleInventoryService_service
@@ -44,14 +46,13 @@ art_make(LIB_LIBRARIES
            ${ART_FRAMEWORK_SERVICES_REGISTRY}
            ${ART_ROOT_IO_TFILESERVICE_SERVICE}
            ${ART_ROOT_IO_TFILE_SUPPORT}
-           ${ROOT_HIST}
-           ${ROOT_CORE}
-           ${ROOT_TREE}
+           ROOT::Hist
+           ROOT::Core
+           ROOT::Tree
          )
 
 install_headers()
 install_fhicl()
-install_source()
 
 # install macro files in lib
 file(GLOB g4_macros *.mac )
diff --git a/larsim/MCCheater/CMakeLists.txt b/larsim/MCCheater/CMakeLists.txt
index 96e726d..1b33f60 100644
--- a/larsim/MCCheater/CMakeLists.txt
+++ b/larsim/MCCheater/CMakeLists.txt
@@ -7,7 +7,7 @@ cet_make_library(
     ${MF_MESSAGELOGGER}
     ${FHICLCPP}
     cetlib_except
-    ${ROOT_CORE}
+    ROOT::Core
   )
 
 cet_make_library(
@@ -17,7 +17,7 @@ cet_make_library(
     cetlib_except
     ${FHICLCPP}
     ${MF_MESSAGELOGGER}
-    ${ROOT_CORE}
+    ROOT::Core
     canvas
     larsim_MCCheater_ParticleInventory
     larcorealg_Geometry
@@ -32,7 +32,7 @@ cet_make_library(
     cetlib_except
     ${FHICLCPP}
     ${MF_MESSAGELOGGER}
-    ${ROOT_CORE}
+    ROOT::Core
     larcorealg_Geometry
     lardataobj_Simulation
     nug4_ParticleNavigation
@@ -43,8 +43,8 @@ simple_plugin(ParticleInventoryService "service"
   ${ART_PERSISTENCY_PROVENANCE}
   larsim_MCCheater_ParticleInventory
   nug4_ParticleNavigation
-  ${ROOT_CORE}
-  ${ROOT_PHYSICS}
+  ROOT::Core
+  ROOT::Physics
   ${MF_MESSAGELOGGER})
 
 simple_plugin(PhotonBackTrackerService "service"
@@ -56,7 +56,7 @@ simple_plugin(PhotonBackTrackerService "service"
 simple_plugin(BackTrackerService "service"
   ${ART_FRAMEWORK_PRINCIPAL}
   ${ART_PERSISTENCY_PROVENANCE}
-  ${ROOT_CORE}
+  ROOT::Core
   ${MF_MESSAGELOGGER}
   larsim_MCCheater_BackTracker
   larsim_MCCheater_ParticleInventory)
@@ -67,7 +67,7 @@ simple_plugin(CheckBackTracking "module"
   lardataobj_RecoBase
   ${MF_MESSAGELOGGER}
   ${ART_FRAMEWORK_SERVICES_REGISTRY}
-  ${ROOT_CORE})
+  ROOT::Core)
 
 simple_plugin(RecoCheckAna "module"
   larsim_MCCheater_BackTrackerService_service
@@ -77,9 +77,9 @@ simple_plugin(RecoCheckAna "module"
   ${ART_ROOT_IO_TFILESERVICE_SERVICE}
   ${ART_ROOT_IO_TFILE_SUPPORT}
   ${MF_MESSAGELOGGER}
-  ${ROOT_CORE}
-  ${ROOT_HIST}
-  ${ROOT_TREE})
+  ROOT::Core
+  ROOT::Hist
+  ROOT::Tree)
 
 simple_plugin(BackTrackerLoader "module"
   larsim_MCCheater_BackTrackerService_service
@@ -93,4 +93,3 @@ simple_plugin(PhotonBackTrackerLoader "module"
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/MCDumpers/CMakeLists.txt b/larsim/MCDumpers/CMakeLists.txt
index 306f510..537e2da 100644
--- a/larsim/MCDumpers/CMakeLists.txt
+++ b/larsim/MCDumpers/CMakeLists.txt
@@ -2,9 +2,8 @@ art_make(MODULE_LIBRARIES
          lardataalg_MCDumpers
          nusimdata_SimulationBase
          ${MF_MESSAGELOGGER}
-         ${ROOT_CORE}
-         ${ROOT_PHYSICS})
+         ROOT::Core
+         ROOT::Physics)
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/MCSTReco/CMakeLists.txt b/larsim/MCSTReco/CMakeLists.txt
index f04a370..61c318c 100644
--- a/larsim/MCSTReco/CMakeLists.txt
+++ b/larsim/MCSTReco/CMakeLists.txt
@@ -1,3 +1,4 @@
+
 add_subdirectory(job)
 
 art_make(LIB_LIBRARIES
@@ -9,15 +10,14 @@ art_make(LIB_LIBRARIES
            cetlib_except
            ${MF_MESSAGELOGGER}
            ${FHICLCPP}
-           ${ROOT_CORE}
-           ${ROOT_PHYSICS}
+           ROOT::Core
+           ROOT::Physics
          MODULE_LIBRARIES
            larsim_MCSTReco
            ${MF_MESSAGELOGGER}
-           ${ROOT_CORE}
-           ${ROOT_PHYSICS}
+           ROOT::Core
+           ROOT::Physics
          )
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/MCSTReco/job/CMakeLists.txt b/larsim/MCSTReco/job/CMakeLists.txt
index 520ed80..3997a04 100644
--- a/larsim/MCSTReco/job/CMakeLists.txt
+++ b/larsim/MCSTReco/job/CMakeLists.txt
@@ -4,5 +4,3 @@ install_fhicl()
 
 # Also put a copy in the source tree.
 
-FILE(GLOB fcl_files *.fcl)
-install_source( EXTRAS ${fcl_files} )
diff --git a/larsim/MergeSimSources/CMakeLists.txt b/larsim/MergeSimSources/CMakeLists.txt
index 0e49d09..c9b4581 100644
--- a/larsim/MergeSimSources/CMakeLists.txt
+++ b/larsim/MergeSimSources/CMakeLists.txt
@@ -1,7 +1,7 @@
-include_directories ( $ENV{GENIE_INC}/GENIE )
-include_directories ( $ENV{LIBXML2_FQ_DIR}/include/libxml2 )
-include_directories ( $ENV{GEANT4_FQ_DIR}/include )
-include_directories ( $ENV{XERCES_C_INC} )
+include_directories ( ${GEANT4_INCLUDE_DIRS} )
+include_directories ( ${GENIE_INC}/GENIE )
+include_directories ( ${LIBXML2_FQ_DIR}/include/libxml2 )
+include_directories ( ${XERCES_C_INC} )
 
 art_make(LIB_LIBRARIES  larsim_PhotonPropagation
                         larsim_PhotonPropagation_PhotonVisibilityService_service
@@ -11,24 +11,23 @@ art_make(LIB_LIBRARIES  larsim_PhotonPropagation
                         larcore_Geometry_Geometry_service
                         nusimdata_SimulationBase
                         ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
+                        ${ART_ROOT_IO_TFILE_SUPPORT} ROOT::Core
                         ${ART_ROOT_IO_TFILESERVICE_SERVICE}
                         canvas
                         ${MF_MESSAGELOGGER}
                         ${FHICLCPP}
                         cetlib_except
-        ${ROOT_BASIC_LIB_LIST}
-                        ${ROOT_GENVECTOR}
-                        ${ROOT_EG}
-                        ${ROOT_TREEPLAYER}
-                        ${ROOT_FFTW}
-                        ${ROOT_REFLEX}
-                        ${ROOT_EGPYTHIA6}
-                        ${ROOT_GUI}
-                        ${ROOT_GEOM}
-                        ${ROOT_MATHCORE}
-                        ${CLHEP}
-                        ${G4_LIB_LIST}
+                        ROOT::GenVector
+                        ROOT::EG
+                        ROOT::TreePlayer
+                        ROOT::FFTW
+                        ROOT::EGPythia6
+                        ROOT::Gui
+                        ROOT::Geom
+                        ROOT::MathCore
+                        ${ROOT_LIBRARIES}
+                        ${CLHEP_LIBRARIES}
+                        ${Geant4_LIBRARIES}
            MODULE_LIBRARIES larsim_MergeSimSources
                         larsim_MCCheater_ParticleInventoryService_service
                         lardataalg_MCDumpers
@@ -37,15 +36,14 @@ art_make(LIB_LIBRARIES  larsim_PhotonPropagation
                         larcore_Geometry_Geometry_service
                         nusimdata_SimulationBase
                         ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                        ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
+                        ${ART_ROOT_IO_TFILE_SUPPORT} ROOT::Core
                         ${ART_ROOT_IO_TFILESERVICE_SERVICE}
                         ${MF_MESSAGELOGGER}
-                        ${ROOT_GENVECTOR}
-        ${ROOT_BASIC_LIB_LIST}
-                        ${CLHEP}
-                        ${G4_LIB_LIST}
+                        ROOT::GenVector
+                        ${ROOT_LIBRARIES}
+                        ${CLHEP_LIBRARIES}
+                        ${Geant4_LIBRARIES}
                 )
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/PhotonPropagation/CMakeLists.txt b/larsim/PhotonPropagation/CMakeLists.txt
index 5ba8a29..720d26a 100644
--- a/larsim/PhotonPropagation/CMakeLists.txt
+++ b/larsim/PhotonPropagation/CMakeLists.txt
@@ -5,19 +5,19 @@ art_make(LIB_LIBRARIES larevt_Filters
                        larsim_Simulation
                        larsim_IonizationScintillation
                        ${ART_FRAMEWORK_SERVICES_REGISTRY}
-                       ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
+                       ${ART_ROOT_IO_TFILE_SUPPORT} ROOT::Core
                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
                        canvas
                        ${MF_MESSAGELOGGER}
                        ${FHICLCPP}
-                       ${CLHEP}
+                       ${CLHEP_LIBRARIES}
                        cetlib_except
-                       ${ROOT_EG}
-                       ${ROOT_RIO}
-                       ${ROOT_HIST}
-                       ${ROOT_MATRIX}
-                       ${ROOT_TREE}
-                       ${ROOT_GENVECTOR}
+                       ROOT::EG
+                       ROOT::RIO
+                       ROOT::Hist
+                       ROOT::Matrix
+                       ROOT::Tree
+                       ${ROOT_LIBRARIES}
           SERVICE_LIBRARIES larsim_PhotonPropagation
                        larsim_Simulation
                        nug4_ParticleNavigation
@@ -26,10 +26,9 @@ art_make(LIB_LIBRARIES larevt_Filters
                        lardataobj_RawData
                        larcorealg_Geometry
                        larcore_Geometry_Geometry_service
-                       ${ART_ROOT_IO_TFILE_SUPPORT} ${ROOT_CORE}
+                       ${ART_ROOT_IO_TFILE_SUPPORT} ROOT::Core
                        ${ART_ROOT_IO_TFILESERVICE_SERVICE}
                        ${MF_MESSAGELOGGER}
-                       ${ROOT_GENVECTOR}
           MODULE_LIBRARIES larsim_PhotonPropagation
                         larsim_LArG4
                         larsim_ElectronDrift
@@ -43,21 +42,20 @@ art_make(LIB_LIBRARIES larevt_Filters
                         ${ART_ROOT_IO_TFILESERVICE_SERVICE}
                         ${ART_FRAMEWORK_SERVICES_REGISTRY}
                         ${ART_ROOT_IO_TFILE_SUPPORT}
-                        ${ROOT_CORE}
+                        ROOT::Core
                         ${MF_MESSAGELOGGER}
                         nurandom_RandomUtils_NuRandomService_service
                         art_Persistency_Provenance
-                        ${CLHEP}
-                        ${ROOT_GENVECTOR}
-                        ${ROOT_GPAD}
+                        ${CLHEP_LIBRARIES}
+                        ROOT::GenVector
+                        ROOT::Gpad
          )
 
 
 install_headers()
 install_fhicl()
-install_source()
 install_scripts()
 
 add_subdirectory(LibraryBuildTools)
 add_subdirectory(LibraryMappingTools)
-add_subdirectory(ScintTimeTools)
\ No newline at end of file
+add_subdirectory(ScintTimeTools)
diff --git a/larsim/PhotonPropagation/LibraryBuildTools/CMakeLists.txt b/larsim/PhotonPropagation/LibraryBuildTools/CMakeLists.txt
index e2dccfe..792d600 100644
--- a/larsim/PhotonPropagation/LibraryBuildTools/CMakeLists.txt
+++ b/larsim/PhotonPropagation/LibraryBuildTools/CMakeLists.txt
@@ -1 +1 @@
-install_source()
+#
diff --git a/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt b/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt
index 6b3ddbf..4a1db83 100644
--- a/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt
+++ b/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt
@@ -4,7 +4,7 @@ art_make(NO_PLUGINS
     PhotonMappingIdentityTransformations_tool.cc
     PhotonMappingXMirrorTransformations_tool.cc
   LIB_LIBRARIES
-    ${ROOT_CORE}
+    ROOT::Core
     larcorealg_Geometry
     ${ART_FRAMEWORK_SERVICES_REGISTRY}
     ${CANVAS}
@@ -18,4 +18,3 @@ simple_plugin(PhotonMappingXMirrorTransformations "tool"
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt b/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt
index 025f559..58f8037 100644
--- a/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt
+++ b/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt
@@ -2,14 +2,14 @@ art_make(NO_PLUGINS
   EXCLUDE
     ScintTimeLAr_tool.cc
   LIB_LIBRARIES
-    ${ROOT_CORE}
+    ROOT::Core
     larcorealg_Geometry
     ${ART_FRAMEWORK_SERVICES_REGISTRY}
     ${CANVAS}
     cetlib
     cetlib_except
     fhiclcpp
-    ${CLHEP}
+    ${CLHEP_LIBRARIES}
     ${ART_UTILITIES}
   )
 
@@ -21,4 +21,3 @@ simple_plugin(ScintTimeLAr "tool"
 
 install_headers()
 install_fhicl()
-install_source()
\ No newline at end of file
diff --git a/larsim/SimFilters/CMakeLists.txt b/larsim/SimFilters/CMakeLists.txt
index 13e2f62..2d9fa47 100644
--- a/larsim/SimFilters/CMakeLists.txt
+++ b/larsim/SimFilters/CMakeLists.txt
@@ -1,12 +1,13 @@
+
 art_make(MODULE_LIBRARIES
          larcorealg_Geometry
          larsim_MCCheater_ParticleInventoryService_service
          nusimdata_SimulationBase
          ${ART_FRAMEWORK_SERVICES_REGISTRY}
          ${MF_MESSAGELOGGER}
-         ${ROOT_CORE}
-         ${ROOT_PHYSICS})
+         ROOT::Core
+         ROOT::Physics)
 
 # install_headers()
 install_fhicl()
-install_source()
+
diff --git a/larsim/Simulation/CMakeLists.txt b/larsim/Simulation/CMakeLists.txt
index a44f775..73ea953 100644
--- a/larsim/Simulation/CMakeLists.txt
+++ b/larsim/Simulation/CMakeLists.txt
@@ -8,12 +8,11 @@ art_make(NO_PLUGINS
            ${ART_FRAMEWORK_SERVICES_REGISTRY}
            ${ART_FRAMEWORK_PRINCIPAL}
            ${ART_PERSISTENCY_PROVENANCE}
-           ${ROOT_CORE}
-           ${ROOT_PHYSICS})
+           ROOT::Core
+           ROOT::Physics)
 
 simple_plugin(LArVoxelCalculator "service")
 simple_plugin(LArG4Parameters "service")
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larsim/TriggerAlgo/CMakeLists.txt b/larsim/TriggerAlgo/CMakeLists.txt
index 2f39352..2fc17d7 100644
--- a/larsim/TriggerAlgo/CMakeLists.txt
+++ b/larsim/TriggerAlgo/CMakeLists.txt
@@ -2,4 +2,3 @@ simple_plugin(TriggerAlgoBase service)
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/test/EventGenerator/CMakeLists.txt b/test/EventGenerator/CMakeLists.txt
index 1f19933..0a5c4ae 100644
--- a/test/EventGenerator/CMakeLists.txt
+++ b/test/EventGenerator/CMakeLists.txt
@@ -14,7 +14,7 @@ simple_plugin( TestGeneratedEventTimestamp "module"
   
   ${FHICLCPP}
   cetlib cetlib_except
-  ${CLHEP}
+  ${CLHEP_LIBRARIES}
   NO_INSTALL
 )
 
