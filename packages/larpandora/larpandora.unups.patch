commit b646c89e2d747d69838f85f6ec83a0fc782e5b99
Author: Patrick Gartung <gartung@fnal.gov>
Date:   Mon Apr 6 11:55:39 2020 -0500

    Cetmodules

diff --git a/CMakeLists.txt b/CMakeLists.txt
index b93e2de..0562793 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -13,21 +13,14 @@
 # ======================================================================
 
 
-# use cmake 2.8 or later
-cmake_minimum_required (VERSION 2.8)
+# use cmake 3.12 or later
+cmake_minimum_required (VERSION 3.12)
 
-project(larpandora)
-
-# cetbuildtools contains our cmake modules
-SET ( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
-IF (NOT CETBUILDTOOLS_VERSION)
-    MESSAGE (FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules")
-ENDIF()
-
-set(CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules
-		      $ENV{CETBUILDTOOLS_DIR}/Modules
-		      ${CMAKE_MODULE_PATH})
+project(larpandora VERSION 08.12.03 LANGUAGES CXX)
 
+set( fcl_dir job )
+set( fw_dir scripts )
+find_package( cetmodules )
 include(CetCMakeEnv)
 cet_cmake_env()
 
@@ -40,54 +33,41 @@ cet_set_compiler_flags(DIAGS CAUTIOUS
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( larcore )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( larsim )
-find_ups_product( larreco )
-find_ups_product( nug4)
-find_ups_product( art )
-find_ups_product(art_root_io)
-find_ups_product( pandora )
-find_ups_product( larpandoracontent )
-find_ups_product( cetbuildtools )
-find_ups_product( postgresql )
+find_package( larreco REQUIRED )
+find_package( LArPandoraContent REQUIRED )
 
 # macros for dictionary and simple_plugin
+
 include(ArtDictionary)
 include(ArtMake)
 include(BuildPlugins)
 
-cet_find_library( PANDORASDK NAMES PandoraSDK PATHS ENV PANDORA_LIB )
-cet_find_library( PANDORAMONITORING NAMES PandoraMonitoring PATHS ENV PANDORA_LIB )
-
-# find larpandoracontent headers if building at the same time
-#message(STATUS "larpandora: checking for MRB_SOURCE")
-set( mrb_source $ENV{MRB_SOURCE} )
-if( LARPANDORACONTENT_INC )
-  #message(STATUS "larpandora: found LARPANDORACONTENT_INC: $ENV{LARPANDORACONTENT_INC}")
-  # note that mrb v1_07_00 or later will define LARPANDORACONTENT_INC
-  if( mrb_source )
-    include_directories( ${LARPANDORACONTENT_INC} )
-  endif()
-else()
-  if( mrb_source )
-    include_directories( ${mrb_source}/larpandoracontent )
-  else()
-    message(FATAL_ERROR "LARPANDORACONTENT_INC is undefined, please setup larpandoracontent")
-  endif()
-endif()
+#cet_find_library( PANDORASDK NAMES PandoraSDK )
+#cet_find_library( PANDORAMONITORING NAMES PandoraMonitoring )
+#
+## find larpandoracontent headers if building at the same time
+##message(STATUS "larpandora: checking for MRB_SOURCE")
+#set( mrb_source $ENV{MRB_SOURCE} )
+#if( LARPANDORACONTENT_INC )
+#  #message(STATUS "larpandora: found LARPANDORACONTENT_INC: $ENV{LARPANDORACONTENT_INC}")
+#  # note that mrb v1_07_00 or later will define LARPANDORACONTENT_INC
+#  if( mrb_source )
+#    include_directories( ${LARPANDORACONTENT_INC} )
+#  endif()
+#else()
+#  if( mrb_source )
+#    include_directories( ${mrb_source}/larpandoracontent )
+#  else()
+#    message(FATAL_ERROR "LARPANDORACONTENT_INC is undefined, please setup larpandoracontent")
+#  endif()
+#endif()
 
 # source
 add_subdirectory(larpandora)
-
+add_subdirectory(cmakeConfig)
 # ups - table and config files
-add_subdirectory(ups)
+#add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
+#include(UseCPack)
 
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..0ea3a1f
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,3 @@
+
+# create package configuration and version files
+cet_cmake_config(CONFIG_FRAGMENTS larpandora-fragment.cmake.in)
diff --git a/cmakeConfig/larpandora-fragment.cmake.in b/cmakeConfig/larpandora-fragment.cmake.in
new file mode 100644
index 0000000..16e07b8
--- /dev/null
+++ b/cmakeConfig/larpandora-fragment.cmake.in
@@ -0,0 +1,3 @@
+find_package( larreco REQUIRED )
+find_package( LArPandoraContent REQUIRED )
+
diff --git a/larpandora/LArPandoraAnalysis/CMakeLists.txt b/larpandora/LArPandoraAnalysis/CMakeLists.txt
index 23f7861..3babfd9 100644
--- a/larpandora/LArPandoraAnalysis/CMakeLists.txt
+++ b/larpandora/LArPandoraAnalysis/CMakeLists.txt
@@ -20,15 +20,13 @@ art_make(
 			art_Utilities
                         canvas
 			${MF_MESSAGELOGGER}
-			
 	                ${FHICLCPP}
 			cetlib cetlib_except
-                        ${Boost_SYSTEM_LIBRARY}
-                        ${ROOT_BASIC_LIB_LIST}
+                        Boost::system
+                        ${ROOT_LIBRARIES}
            MODULE_LIBRARIES larpandora_LArPandoraInterface
           )
 
 install_headers()
 install_fhicl()
-install_source()
 
diff --git a/larpandora/LArPandoraEventBuilding/CMakeLists.txt b/larpandora/LArPandoraEventBuilding/CMakeLists.txt
index 7a5fae1..b6067e6 100644
--- a/larpandora/LArPandoraEventBuilding/CMakeLists.txt
+++ b/larpandora/LArPandoraEventBuilding/CMakeLists.txt
@@ -1,5 +1,7 @@
-include_directories( $ENV{PANDORA_INC} )
-include_directories( $ENV{LARPANDORACONTENT_INC} )
+include_directories( ${PandoraSDK_INCLUDE_DIRS} )
+include_directories( ${PandoraMonitoring_INCLUDE_DIRS} )
+include_directories( ${EIGEN3_INCLUDE_DIRS} )
+include_directories( ${LArPandoraContent_INCLUDE_DIRS} )
 
 art_make( 
           LIB_LIBRARIES larcorealg_Geometry
@@ -14,8 +16,8 @@ art_make(
                         larreco_RecoAlg
                         larreco_ClusterFinder
                         larreco_Calorimetry
-                        ${PANDORASDK}
-                        ${PANDORAMONITORING}
+                        ${PandoraSDK_LIBRARIES}
+                        ${PandoraMonitoring_LIBRARIES}
                         LArPandoraContent
                         larpandora_LArPandoraInterface
                         nusimdata_SimulationBase
@@ -32,11 +34,11 @@ art_make(
                         ${MF_MESSAGELOGGER}
                         ${FHICLCPP}
                         cetlib cetlib_except
-                        ${Boost_SYSTEM_LIBRARY}
-                        ${Boost_FILESYSTEM_LIBRARY}
-                        ${ROOT_GEOM}
-                        ${ROOT_BASIC_LIB_LIST}
-                        ${ROOT_GENVECTOR}
+                        Boost::system
+                        Boost::filesystem
+                        ROOT::Geom
+                        ${ROOT_LIBRARIES}
+                        ROOT::GenVector
                         MODULE_LIBRARIES larpandora_LArPandoraEventBuilding
           )
 
@@ -44,4 +46,3 @@ art_make(
 
 install_headers()
 install_fhicl()
-install_source()
diff --git a/larpandora/LArPandoraInterface/CMakeLists.txt b/larpandora/LArPandoraInterface/CMakeLists.txt
index 67fc1c2..b8c7f04 100644
--- a/larpandora/LArPandoraInterface/CMakeLists.txt
+++ b/larpandora/LArPandoraInterface/CMakeLists.txt
@@ -1,5 +1,7 @@
-include_directories( $ENV{PANDORA_INC} )
-include_directories( $ENV{LARPANDORACONTENT_INC} )
+include_directories( ${PandoraSDK_INCLUDE_DIRS} )
+include_directories( ${PandoraMonitoring_INCLUDE_DIRS} )
+include_directories( ${EIGEN3_INCLUDE_DIRS} )
+include_directories( ${LArPandoraContent_INCLUDE_DIRS} )
 
 art_make( 
           LIB_LIBRARIES larcorealg_Geometry
@@ -15,8 +17,8 @@ art_make(
                         larreco_RecoAlg
                         larreco_ClusterFinder
                         larreco_Calorimetry
-                        ${PANDORASDK}
-                        ${PANDORAMONITORING}
+                        ${PandoraSDK_LIBRARIES}
+                        ${PandoraMonitoring_LIBRARIES}
                         LArPandoraContent
                         nusimdata_SimulationBase
                         ${ART_FRAMEWORK_CORE}
@@ -30,18 +32,16 @@ art_make(
                         art_Utilities
                         canvas
                         ${MF_MESSAGELOGGER}
-                        
                         ${FHICLCPP}
                         cetlib cetlib_except
-                        ${Boost_SYSTEM_LIBRARY}
-                        ${ROOT_GEOM}
-                        ${ROOT_BASIC_LIB_LIST}
+                        Boost::system
+                        ROOT::Geom
+                        ${ROOT_LIBRARIES}
                         MODULE_LIBRARIES larpandora_LArPandoraInterface
           )
 
 install_headers()
 install_fhicl()
-install_source()
 
 add_subdirectory(scripts)
 
