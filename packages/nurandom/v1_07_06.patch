diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6eb5acc..36e3afe 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -12,31 +12,23 @@
 #  make install
 #  make package (builds distribution tarfile)
 # ======================================================================
+cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
-cmake_minimum_required(VERSION 3.18.2 FATAL_ERROR)
-
+find_package(cetmodules 2.29.06 REQUIRED)
 project(nurandom VERSION 1.07.06 LANGUAGES CXX)
 
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
-
-list(APPEND CMAKE_MODULE_PATH
-  $ENV{CANVAS_ROOT_IO_DIR}/Modules
-  $ENV{ART_DIR}/Modules)
-
 include(CetCMakeEnv)
 cet_cmake_env()
 
 cet_set_compiler_flags(DIAGS CAUTIOUS WERROR
                        NO_UNDEFINED
-                       EXTRA_FLAGS -pedantic
-                       EXTRA_CXX_FLAGS -Wno-unused-local-typedefs -Wno-variadic-macros)
-cet_report_compiler_flags()
+                       EXTRA_FLAGS -pedantic 
+                                   $<$<COMPILE_LANGUAGE:CXX>:-Wno-unused-local-typedefs
+                                                             -Wno-variadic-macros>)
+cet_report_compiler_flags(REPORT_THRESHOLD VERBOSE)
 
-# these are minimum required versions, not the actual product versions
-find_ups_product(art_root_io)
-find_ups_product( clhep )
-find_ups_root()
+find_package(art_root_io REQUIRED)
+find_package(CLHEP REQUIRED)
 
 # macros
 include(ArtMake)
@@ -47,8 +39,7 @@ add_subdirectory (nurandom)
 add_subdirectory (test)
 
 # ups - table and config files
-add_subdirectory(ups)
 
 # packaging utility
-include(UseCPack)
 
+cet_cmake_config()
diff --git a/nurandom/RandomUtils/CMakeLists.txt b/nurandom/RandomUtils/CMakeLists.txt
index 930e8ae..5002337 100644
--- a/nurandom/RandomUtils/CMakeLists.txt
+++ b/nurandom/RandomUtils/CMakeLists.txt
@@ -1,9 +1,12 @@
 add_subdirectory(Providers)
 
-art_make(
-  SERVICE_LIBRARIES
-    nurandom_RandomUtils_Providers
-    art_Framework_Core
+find_package(ROOT COMPONENTS Core REQUIRED)
+find_package(Boost COMPONENTS filesystem REQUIRED)
+
+cet_build_plugin(NuRandomService art::service
+  LIBRARIES
+    nurandom::RandomUtils_Providers
+    art::Framework_Core
     art::Framework_Principal
     art::Framework_Services_Registry
     art::Persistency_Provenance
@@ -11,21 +14,20 @@ art_make(
     art::Framework_Services_Optional_RandomNumberGenerator_service
     canvas::canvas
     messagefacility::MF_MessageLogger
-    fhiclcpp
+    fhiclcpp::fhiclcpp
     cetlib::cetlib
     cetlib_except::cetlib_except
-    ROOT::Core
-  PLUGIN_LIBRARIES
-    art_Framework_Core
+    ROOT::Core)
+cet_build_plugin(GeneratedEventTimestamp art::plugin
+  LIBRARIES PRIVATE
+    art::Framework_Core
     art::Persistency_Provenance
     canvas::canvas
     messagefacility::MF_MessageLogger
-    fhiclcpp
+    fhiclcpp::fhiclcpp
     cetlib::cetlib
     cetlib_except::cetlib_except
-    ${Boost_FILESYSTEM_LIBRARY}
-    ${Boost_SYSTEM_LIBRARY}
-)
+    Boost::filesystem)
 
 install_source()
 install_headers()
diff --git a/nurandom/RandomUtils/NuRandomService.h b/nurandom/RandomUtils/NuRandomService.h
index 4261b5a..bab2578 100644
--- a/nurandom/RandomUtils/NuRandomService.h
+++ b/nurandom/RandomUtils/NuRandomService.h
@@ -289,7 +289,7 @@ namespace rndm {
    * the seed of the engine to that value, and it will mark the engine as
    * "frozen" (meaning that `NuRandomService` will not ever set a seed again on
    * that engine). [see also the
-   * @link nurandom_NuRandomService_SpecialSeedValue "exception to this rule"
+   * @link nurandom::NuRandomService_SpecialSeedValue "exception to this rule"
    * below]
    * Likewise, if the optional parameter is specified, its value will be
    * honored, and the service will be queried for an automatic seed otherwise.
@@ -308,7 +308,7 @@ namespace rndm {
    * "Seed", then "MySeed" in this example). In other words, if "Seed" exists,
    * its value is used as seed, otherwise if "MySeed" exists, its value is used
    * instead, and otherwise NuRandomService is given control on that seed.
-   * @anchor nurandom_NuRandomService_SpecialSeedValue
+   * @anchor nurandom::NuRandomService_SpecialSeedValue
    * The exception is that if the specified seed is a "magic value", the
    * `InvalidSeed` (`0`), it is interpreted as a request to ignore the parameter
    * and use the service to get the seed. This is made as a quick way to remove
diff --git a/nurandom/RandomUtils/Providers/CMakeLists.txt b/nurandom/RandomUtils/Providers/CMakeLists.txt
index dd7b61d..245eeed 100644
--- a/nurandom/RandomUtils/Providers/CMakeLists.txt
+++ b/nurandom/RandomUtils/Providers/CMakeLists.txt
@@ -1,11 +1,11 @@
-cet_make(
+cet_make_library(SOURCE PolicyNames.cxx
+  HEADERS_TARGET
   LIBRARIES
-    fhiclcpp
+    fhiclcpp::fhiclcpp
     cetlib::cetlib
     cetlib_except::cetlib_except
 )
 
-
 install_source()
 install_headers()
 install_fhicl()
diff --git a/test/RandomUtils/CMakeLists.txt b/test/RandomUtils/CMakeLists.txt
index 8cabd96..b6b1fb9 100644
--- a/test/RandomUtils/CMakeLists.txt
+++ b/test/RandomUtils/CMakeLists.txt
@@ -1,49 +1,68 @@
 add_subdirectory(Providers)
 
-art_make(
-  EXCLUDE GeneratedEventTimestampTestPlugin_plugin.cc
-  LIB_LIBRARIES
-    nurandom_RandomUtils_NuRandomService_service
+find_package(ROOT COMPONENTS Core MathCore REQUIRED PRIVATE)
+
+art_make_library(SOURCE SeedTestUtils.cxx
+  LIBRARIES
+    nurandom::RandomUtils_NuRandomService_service
     art::Framework_Core
     ${ART_FRAMEWORK_UTILITIES}
     ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
     messagefacility::MF_MessageLogger
-    
-    fhiclcpp::fhiclcpp
-    cetlib::cetlib
-    cetlib_except::cetlib_except
-    CLHEP
-    NO_INSTALL
-  MODULE_LIBRARIES
-    nurandom_test_RandomUtils
-    nurandom_RandomUtils_NuRandomService_service
-    art::Framework_Core
-    art::Framework_Principal
-    art::Framework_Services_Registry
-    ${ART_FRAMEWORK_SERVICES_OPTIONAL_RANDOMNUMBERGENERATOR_SERVICE}
-    messagefacility::MF_MessageLogger
-    
-    fhiclcpp::fhiclcpp
-    cetlib::cetlib
-    cetlib_except::cetlib_except
-    CLHEP
-    NO_INSTALL
-  SERVICE_LIBRARIES
-    nurandom_RandomUtils_NuRandomService_service
-    art::Utilities
-    canvas::canvas
-    art::Framework_Services_Registry
-    messagefacility::MF_MessageLogger
-    
     fhiclcpp::fhiclcpp
     cetlib::cetlib
     cetlib_except::cetlib_except
-    ROOT::Core
-    ROOT::MathCore
+    CLHEP::CLHEP
     NO_INSTALL
-  USE_PRODUCT_NAME
 )
 
+cet_build_plugin(GlobalEngineUserTestService art::service
+  LIBRARIES nurandom::RandomUtils_NuRandomService_service art::Utilities canvas::canvas
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except ROOT::Core
+  ROOT::MathCore NO_INSTALL)
+cet_build_plugin(RandomManagerTest art::module
+  LIBRARIES PRIVATE nurandom::test_RandomUtils nurandom::RandomUtils_NuRandomService_service
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except CLHEP::CLHEP
+  NO_INSTALL)
+cet_build_plugin(SeedTestPolicy art::module
+  LIBRARIES PRIVATE nurandom::test_RandomUtils nurandom::RandomUtils_NuRandomService_service
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except CLHEP::CLHEP
+  NO_INSTALL)
+cet_build_plugin(SeedTestQuerySeeds art::module
+  LIBRARIES PRIVATE nurandom::test_RandomUtils nurandom::RandomUtils_NuRandomService_service
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except CLHEP::CLHEP
+  NO_INSTALL)
+cet_build_plugin(SeedTestRegisterOnProcessEvent art::module
+  LIBRARIES PRIVATE nurandom::test_RandomUtils nurandom::RandomUtils_NuRandomService_service
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except CLHEP::CLHEP
+  NO_INSTALL)
+cet_build_plugin(SeedTestRegisterOnRun art::module
+  LIBRARIES PRIVATE nurandom::test_RandomUtils nurandom::RandomUtils_NuRandomService_service
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except CLHEP::CLHEP
+  NO_INSTALL)
+cet_build_plugin(SeedTestRegisterOnSubRun art::module
+  LIBRARIES PRIVATE nurandom::test_RandomUtils nurandom::RandomUtils_NuRandomService_service
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except CLHEP::CLHEP
+  NO_INSTALL)
+cet_build_plugin(ValidatedConfigSeedTest art::module
+  LIBRARIES PRIVATE nurandom::test_RandomUtils nurandom::RandomUtils_NuRandomService_service
+  art::Framework_Core art::Framework_Principal
+  art::Framework_Services_Registry messagefacility::MF_MessageLogger
+  fhiclcpp::fhiclcpp cetlib::cetlib cetlib_except::cetlib_except CLHEP::CLHEP
+  NO_INSTALL)
 
 #
 # The following tests verify that engine declaration may happen only on
diff --git a/test/RandomUtils/Providers/CMakeLists.txt b/test/RandomUtils/Providers/CMakeLists.txt
index 36f05dd..2d62696 100644
--- a/test/RandomUtils/Providers/CMakeLists.txt
+++ b/test/RandomUtils/Providers/CMakeLists.txt
@@ -2,11 +2,10 @@
 cet_test( SeedMaster_test
   NO_AUTO
   LIBRARIES
-    nurandom_RandomUtils_Providers
+    nurandom::RandomUtils_Providers
     art::Utilities
     canvas::canvas
     messagefacility::MF_MessageLogger
-    
     fhiclcpp::fhiclcpp
     cetlib::cetlib
     cetlib_except::cetlib_except
