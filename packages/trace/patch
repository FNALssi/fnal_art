diff --git a/CMakeLists.txt b/CMakeLists.txt
index c5f89ba..cb5c20c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -32,22 +32,22 @@ set(CMAKE_CXX_COMPILER "$ENV{GCC_FQ_DIR}/bin/g++")
 file(WRITE doc/compiler_info "Built TRACE utilities using GCC: $ENV{GCC_FQ_DIR}/bin/gcc!")
 endif()
 
-set( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
-if( NOT CETBUILDTOOLS_VERSION )
-  message( FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules" )
-endif()
-set(CMAKE_MODULE_PATH $ENV{CETBUILDTOOLS_DIR}/Modules
-		      ${CMAKE_MODULE_PATH})
-
+#set( CETBUILDTOOLS_VERSION $ENV{CETBUILDTOOLS_VERSION} )
+#if( NOT CETBUILDTOOLS_VERSION )
+#  message( FATAL_ERROR "ERROR: setup cetbuildtools to get the cmake modules" )
+#endif()
+#set(CMAKE_MODULE_PATH $ENV{CETBUILDTOOLS_DIR}/Modules
+#		      ${CMAKE_MODULE_PATH})
+find_package(cetmodules)
 include(CetCMakeEnv)
 cet_cmake_env()
 
-cet_set_compiler_flags(DIAGS VIGILANT WERROR EXTRA_FLAGS -O2 -pedantic -Wno-variadic-macros
+cet_set_compiler_flags(DIAGS VIGILANT WERROR EXTRA_FLAGS -O2 -pedantic -Wno-variadic-macros -Wno-implicit-fallthrough
                        EXTRA_C_FLAGS -std=gnu11 -D_GNU_SOURCE -DDO_THREADS -pthread
                        EXTRA_CXX_FLAGS -std=c++0x)
-set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DDO_THREADS -pthread")
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DDO_THREADS -pthread -Wno-implicit-fallthrough")
 set(CMAKE_LD_FLAGS "${CMAKE_LD_FLAGS} -lpthread")
-set(CMAKE_CXX_FLAGS "-std=c++0x -O2 -Wno-variadic-macros")
+set(CMAKE_CXX_FLAGS "-std=c++0x -O2 -Wno-variadic-macros -Wno-implicit-fallthrough")
 cet_report_compiler_flags()
 
 if(DEFINED ENV{USE_ASAN})
@@ -70,45 +70,45 @@ if(DEFINED ENV{USE_UBSAN})
 endif()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product( cetbuildtools v3_03_00 )
+#find_ups_product( cetbuildtools v3_03_00 )
 
 include_directories(include)
 
 # We're going to install the source folders directly to make sure to have the correct Makefiles
 # for building kernel modules after deployment.
 FILE(COPY Makefile DESTINATION .)
-INSTALL(FILES Makefile DESTINATION ${product}/${version})
+INSTALL(FILES Makefile DESTINATION ${CMAKE_INSTALL_PREFIX})
 
 # The trace utility
 add_subdirectory(src_utility)
 FILE(COPY src_utility DESTINATION . PATTERN ".svn" EXCLUDE)
-INSTALL(DIRECTORY src_utility DESTINATION ${product}/${version} PATTERN ".svn" EXCLUDE)
+INSTALL(DIRECTORY src_utility DESTINATION ${CMAKE_INSTALL_PREFIX} PATTERN ".svn" EXCLUDE)
 
 # Example Programs
 add_subdirectory(src_example)
 FILE(COPY src_example DESTINATION . PATTERN ".svn" EXCLUDE)
-INSTALL(DIRECTORY src_example DESTINATION ${product}/${version} PATTERN ".svn" EXCLUDE)
+INSTALL(DIRECTORY src_example DESTINATION ${CMAKE_INSTALL_PREFIX} PATTERN ".svn" EXCLUDE)
 
 # Kernel Module
 add_subdirectory(src_module)
 FILE(COPY src_module DESTINATION . PATTERN ".svn" EXCLUDE)
-INSTALL(DIRECTORY src_module DESTINATION ${product}/${version} PATTERN ".svn" EXCLUDE)
+INSTALL(DIRECTORY src_module DESTINATION ${CMAKE_INSTALL_PREFIX} PATTERN ".svn" EXCLUDE)
 
 # The include directory (aka the core of TRACE)
 FILE(COPY include DESTINATION . PATTERN ".svn" EXCLUDE)
-INSTALL(DIRECTORY include DESTINATION ${product}/${version} PATTERN ".svn" EXCLUDE)
+INSTALL(DIRECTORY include DESTINATION ${CMAKE_INSTALL_PREFIX} PATTERN ".svn" EXCLUDE)
 
 # scripts, including the trace_delta.pl script used for tdelta
 add_subdirectory(script)
 
 # ups - table and config files
-add_subdirectory(ups)
+#add_subdirectory(ups)
 
 # doc - Some documentation...There should be a cet_ function for this...
 FILE(COPY README DESTINATION .)
-INSTALL(FILES README DESTINATION ${product}/${version})
+INSTALL(FILES README DESTINATION ${CMAKE_INSTALL_PREFIX})
 FILE(COPY doc DESTINATION . PATTERN ".svn" EXCLUDE)
-INSTALL(DIRECTORY doc DESTINATION ${product}/${version} PATTERN ".svn" EXCLUDE)
+INSTALL(DIRECTORY doc DESTINATION ${CMAKE_INSTALL_PREFIX} PATTERN ".svn" EXCLUDE)
 
 # packaging utility - enable building a package tarball
-include(UseCPack)
+#include(UseCPack)
diff --git a/src_example/module/CMakeLists.txt b/src_example/module/CMakeLists.txt
index 32bfde0..94ec87d 100644
--- a/src_example/module/CMakeLists.txt
+++ b/src_example/module/CMakeLists.txt
@@ -21,6 +21,6 @@ if(EXISTS /lib/module/${KVERS}/build)
 		COMMAND make clean
         DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/some_module.c ${CMAKE_CURRENT_SOURCE_DIR}/steve_module.c
     )
-    add_custom_target(some_mod ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/../../module/${KVERS}/some_mod.ko src_module)
+    add_custom_target(some_mod ALL DEPENDS ${CMAKE_INSTALL_PREFIX}/module/${KVERS}/some_mod.ko src_module)
 endif()
 #install_source()
diff --git a/src_example/module1/CMakeLists.txt b/src_example/module1/CMakeLists.txt
index a8fce91..446f194 100644
--- a/src_example/module1/CMakeLists.txt
+++ b/src_example/module1/CMakeLists.txt
@@ -19,6 +19,6 @@ if (EXISTS /lib/module/${KVERS}/build)
         DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/other_module.c
     )
 
-    add_custom_target(module1 ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/../../module/${KVERS}/other_mod.ko src_module)
+    add_custom_target(module1 ALL DEPENDS ${CMAKE_INSTALL_PREFIX}/module/${KVERS}/other_mod.ko src_module)
 endif()
 #install_source()
diff --git a/src_module/CMakeLists.txt b/src_module/CMakeLists.txt
index 72558bb..6abebd7 100644
--- a/src_module/CMakeLists.txt
+++ b/src_module/CMakeLists.txt
@@ -22,6 +22,6 @@ if (EXISTS /lib/modules/${KVERS}/build)
 
     add_custom_target(src_module ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/../module/${KVERS}/TRACE.ko)
 
-    install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/../module/ DESTINATION ${${product}_inc_dir}/../module)
+    install(DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/../module/ DESTINATION ${CMAKE_INSTALL_PREFIX}/module)
 endif()
 #install_source()
