commit 0024772c63c72bf58796ba9d2ba542096a522022
Author: Patrick Gartung <gartung@fnal.gov>
Date:   Wed Apr 1 17:17:03 2020 -0500

    Cetmodules

diff --git a/CMakeLists.txt b/CMakeLists.txt
index a9650ae..d19ee35 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -14,12 +14,12 @@
 
 
 # use cmake 3.11 or later
-cmake_minimum_required (VERSION 3.11)
+cmake_minimum_required (VERSION 3.12...3.14 FATAL_ERROR)
 
-project(canvas_root_io)
+project(canvas_root_io VERSION 1.05.01 LANGUAGES CXX)
 
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools 7.13.01 REQUIRED)
+# cetmodules contains our cmake modules
+find_package(cetmodules 1.01.01 REQUIRED)
 
 list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/Modules)
 
@@ -32,55 +32,19 @@ cet_set_compiler_flags(DIAGS VIGILANT
   EXTRA_FLAGS -pedantic
   EXTRA_CXX_FLAGS -Wnon-virtual-dtor -Wdelete-non-virtual-dtor -DBOOST_TEST_NO_OLD_TOOLS
   )
-cet_have_qual(sse2 SSE2)
-if ( SSE2 )
-  cet_add_compiler_flags(CXX -msse2 -ftree-vectorizer-verbose=2)
-endif()
-
-if($ENV{CET_SANITIZE_ADDRESS})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(ASAN_LIB libasan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if($ENV{CET_SANITIZE_THREAD})
-  if(NOT "$ENV{GCC_FQ_DIR}" STREQUAL "")
-    find_file(TSAN_LIB libtsan.so NO_DEFAULT_PATH PATHS $ENV{GCC_FQ_DIR}/lib64)
-  endif()
-endif()
-
-if ($ENV{CET_SANITIZE_ADDRESS})
-cet_add_compiler_flags(CXX -fsanitize=address)
-cet_add_compiler_flags(C -fsanitize=address)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=address")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=address")
-endif()
-
-if ($ENV{CET_SANITIZE_THREAD})
-cet_add_compiler_flags(CXX -fsanitize=thread -D__SANITIZE_THREAD__)
-cet_add_compiler_flags(C -fsanitize=thread -D__SANITIZE_THREAD__)
-set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_MODULE_LINKER_FLAGS_DEBUG "${CMAKE_MODULE_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -fsanitize=thread -D__SANITIZE_THREAD__")
-endif()
 
 cet_report_compiler_flags()
 
-find_ups_product(canvas)
-find_ups_product(clhep)
-find_ups_product(cetlib_except)
-find_ups_product(cetlib v2_01_00)
-find_ups_product(fhiclcpp)
-find_ups_product(messagefacility)
-find_ups_root()
-find_ups_boost(BOOST_TARGETS)
-
-# define CLHEP
-cet_find_library( CLHEP  NAMES CLHEP   PATHS ENV CLHEP_LIB_DIR NO_DEFAULT_PATH )
-
-# define cppunit
-cet_find_library( CPPUNIT NAMES cppunit   PATHS ENV CPPUNIT_LIB   NO_DEFAULT_PATH )
+find_package(hep_concurrency REQUIRED)
+find_package(cetlib_except REQUIRED)
+find_package(cetlib REQUIRED)
+find_package(fhiclcpp REQUIRED)
+find_package(messagefacility REQUIRED)
+find_package(canvas REQUIRED)
+find_package(CLHEP REQUIRED COMPONENTS Matrix Vector)
+include_directories(${CLHEP_INCLUDE_DIRS})
+find_package(ROOT REQUIRED COMPONENTS)
+find_package(Boost REQUIRED COMPONENTS thread)
 
 # art_dictionary
 include(ArtDictionary)
@@ -89,13 +53,10 @@ include(ArtDictionary)
 add_subdirectory(canvas_root_io)
 
 # ups - table and config files
-add_subdirectory(ups)
+add_subdirectory(cmakeConfig)
 
 # CMake modules
 add_subdirectory(Modules)
 
 # tools - e.g. migration scripts
 add_subdirectory(tools)
-
-# packaging utility
-include(UseCPack)
diff --git a/Modules/ArtDictionary.cmake b/Modules/ArtDictionary.cmake
index 646328b..ec0948d 100644
--- a/Modules/ArtDictionary.cmake
+++ b/Modules/ArtDictionary.cmake
@@ -52,12 +52,6 @@ include(BuildDictionary)
 include(CMakeParseArguments)
 
 function(art_dictionary)
-  check_ups_version(cetbuildtools ${cetbuildtools_UPS_VERSION} v5_0_0
-    PRODUCT_MATCHES_VAR AD_HAVE_REQUIRED_CETBUILDTOOLS)
-  if (NOT AD_HAVE_REQUIRED_CETBUILDTOOLS)
-    message(FATAL_ERROR "ArtDictionary requires cetbuildtools v5_0_0 or greater.")
-  endif()
-
   cmake_parse_arguments(AD
     "UPDATE_IN_PLACE;DICT_FUNCTIONS;USE_PRODUCT_NAME;NO_CHECK_CLASS_VERSION;NO_DEFAULT_LIBRARIES"
     "DICT_NAME_VAR"
diff --git a/Modules/CMakeLists.txt b/Modules/CMakeLists.txt
index aacbf1b..e654c4c 100644
--- a/Modules/CMakeLists.txt
+++ b/Modules/CMakeLists.txt
@@ -1,4 +1,4 @@
 INSTALL(FILES
   ArtDictionary.cmake
-  DESTINATION ${product}/${version}/Modules
+  DESTINATION Modules
   )
diff --git a/canvas_root_io/CMakeLists.txt b/canvas_root_io/CMakeLists.txt
index 4268cbb..a123368 100644
--- a/canvas_root_io/CMakeLists.txt
+++ b/canvas_root_io/CMakeLists.txt
@@ -1,5 +1,7 @@
 include(CetMake)
 
+find_package(ROOT QUIET REQUIRED COMPONENTS Core)
+
 # cmake will automatically order the library builds according to declared dependencies
 add_subdirectory(Dictionaries)
 add_subdirectory(Streamers)
@@ -17,7 +19,8 @@ cet_make(LIBRARY_NAME canvas_root_io
   fhiclcpp
   cetlib
   cetlib_except
-  ${CLHEP}
+  CLHEP::Matrix
+  CLHEP::Vector
   NO_DICTIONARY
   )
 
diff --git a/canvas_root_io/Dictionaries/cetlib/CMakeLists.txt b/canvas_root_io/Dictionaries/cetlib/CMakeLists.txt
index 5f0e709..33332f6 100644
--- a/canvas_root_io/Dictionaries/cetlib/CMakeLists.txt
+++ b/canvas_root_io/Dictionaries/cetlib/CMakeLists.txt
@@ -1,3 +1 @@
 art_dictionary(DICTIONARY_LIBRARIES cetlib NO_CHECK_CLASS_VERSION)
-
-install_source()
diff --git a/canvas_root_io/Dictionaries/clhep/CMakeLists.txt b/canvas_root_io/Dictionaries/clhep/CMakeLists.txt
index cec7cab..d1d106f 100644
--- a/canvas_root_io/Dictionaries/clhep/CMakeLists.txt
+++ b/canvas_root_io/Dictionaries/clhep/CMakeLists.txt
@@ -1,3 +1 @@
-art_dictionary(DICTIONARY_LIBRARIES ${CLHEP} NO_CHECK_CLASS_VERSION)
-
-install_source()
+art_dictionary(DICTIONARY_LIBRARIES CLHEP::Matrix CLHEP::Vector NO_CHECK_CLASS_VERSION)
diff --git a/canvas_root_io/Dictionaries/fhiclcpp/CMakeLists.txt b/canvas_root_io/Dictionaries/fhiclcpp/CMakeLists.txt
index cbdd4fa..a7f90cb 100644
--- a/canvas_root_io/Dictionaries/fhiclcpp/CMakeLists.txt
+++ b/canvas_root_io/Dictionaries/fhiclcpp/CMakeLists.txt
@@ -1,3 +1 @@
 art_dictionary(DICTIONARY_LIBRARIES fhiclcpp NO_CHECK_CLASS_VERSION)
-
-install_source()
diff --git a/canvas_root_io/Dictionaries/std/CMakeLists.txt b/canvas_root_io/Dictionaries/std/CMakeLists.txt
index f726415..f949beb 100644
--- a/canvas_root_io/Dictionaries/std/CMakeLists.txt
+++ b/canvas_root_io/Dictionaries/std/CMakeLists.txt
@@ -1,3 +1 @@
 art_dictionary(NO_DEFAULT_LIBRARIES NO_CHECK_CLASS_VERSION)
-
-install_source()
diff --git a/canvas_root_io/Dictionaries/wrapped_std/CMakeLists.txt b/canvas_root_io/Dictionaries/wrapped_std/CMakeLists.txt
index d43149d..89828c3 100644
--- a/canvas_root_io/Dictionaries/wrapped_std/CMakeLists.txt
+++ b/canvas_root_io/Dictionaries/wrapped_std/CMakeLists.txt
@@ -1,3 +1 @@
 art_dictionary(NO_CHECK_CLASS_VERSION)
-
-install_source()
diff --git a/canvas_root_io/Streamers/CMakeLists.txt b/canvas_root_io/Streamers/CMakeLists.txt
index eec96b5..2ee79f7 100644
--- a/canvas_root_io/Streamers/CMakeLists.txt
+++ b/canvas_root_io/Streamers/CMakeLists.txt
@@ -1,2 +1 @@
 install_headers()
-install_source()
diff --git a/canvas_root_io/Utilities/CMakeLists.txt b/canvas_root_io/Utilities/CMakeLists.txt
index eec96b5..2ee79f7 100644
--- a/canvas_root_io/Utilities/CMakeLists.txt
+++ b/canvas_root_io/Utilities/CMakeLists.txt
@@ -1,2 +1 @@
 install_headers()
-install_source()
diff --git a/canvas_root_io/test/Aggregate/CMakeLists.txt b/canvas_root_io/test/Aggregate/CMakeLists.txt
index 2b54c2e..b7d4431 100644
--- a/canvas_root_io/test/Aggregate/CMakeLists.txt
+++ b/canvas_root_io/test/Aggregate/CMakeLists.txt
@@ -1,3 +1,5 @@
+find_package(ROOT QUIET REQUIRED COMPONENTS Core Hist)
+
 cet_test(aggregate_th1_t USE_BOOST_UNIT
   LIBRARIES
   canvas
diff --git a/canvas_root_io/test/Utilities/CMakeLists.txt b/canvas_root_io/test/Utilities/CMakeLists.txt
index 6c1a506..a27e058 100644
--- a/canvas_root_io/test/Utilities/CMakeLists.txt
+++ b/canvas_root_io/test/Utilities/CMakeLists.txt
@@ -1,5 +1,7 @@
 art_dictionary(NO_DEFAULT_LIBRARIES DICTIONARY_LIBRARIES cetlib NO_INSTALL)
 
+find_package(ROOT QUIET REQUIRED COMPONENTS Tree MathCore Core RIO Hist Matrix)
+
 cet_make_exec(TypeNameBranchName_t
   NO_INSTALL
   LIBRARIES
@@ -31,13 +33,10 @@ endforeach()
 cet_test(RootClassMapping_t USE_BOOST_UNIT
   LIBRARIES
   canvas_root_io_test_Utilities_dict
-  ${ROOT_CINTEX}
-  ROOT::Tree
-  ROOT::MathCore
-  ROOT::RIO
-  ROOT::Core
-  ${ROOT_CINT}
-  ${ROOT_REFLEX}
+  ${ROOT_Tree_LIBRARY}
+  ${ROOT_MathCore_LIBRARY}
+  ${ROOT_RIO_LIBRARY}
+  ${ROOT_Core_LIBRARY}
   ${CMAKE_DL_LIBS}
   # When ROOT is fixed WILL_FAIL should be removed and the code in ASSNS
   # (and associated ioread rules) should be fixed accordingly.
diff --git a/cmakeConfig/CMakeLists.txt b/cmakeConfig/CMakeLists.txt
new file mode 100644
index 0000000..9d6f3a3
--- /dev/null
+++ b/cmakeConfig/CMakeLists.txt
@@ -0,0 +1,2 @@
+# Create package configuration and version files.
+cet_cmake_config(CONFIG_FRAGMENTS canvas-root-io-fragment.cmake.in)
diff --git a/cmakeConfig/canvas-root-io-fragment.cmake.in b/cmakeConfig/canvas-root-io-fragment.cmake.in
new file mode 100644
index 0000000..4801322
--- /dev/null
+++ b/cmakeConfig/canvas-root-io-fragment.cmake.in
@@ -0,0 +1,4 @@
+find_package(hep_concurrency REQUIRED)
+find_package(canvas REQUIRED)
+find_package(CLHEP REQUIRED COMPONENTS Matrix Vector)
+find_package(ROOT REQUIRED COMPONENTS)
diff --git a/tools/migration/CMakeLists.txt b/tools/migration/CMakeLists.txt
index 8cd7b55..c04d70e 100644
--- a/tools/migration/CMakeLists.txt
+++ b/tools/migration/CMakeLists.txt
@@ -2,4 +2,4 @@ install(PROGRAMS
   fix_cmake_canvas_root_io.pl
   update_for_canvas_root_io.sh
   update-root-cmake
-  DESTINATION "${product}/${version}/tools/migration/")
+  DESTINATION "tools/migration")
